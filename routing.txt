
**********************************************************
path :http://localhost:4200/#/agentOnboarding/knowYourCandidate
***************************************************************

app.module.ts 
OnboardingModule // module imported in imports []


----------
onboarding.module.ts
--------------
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { OnboardingComponent } from './onboarding.component';
import { routing } from './onboarding.routing';
import { OnboardingService } from './services/onboarding.service';
import {AgentOnboardingModule} from './modules/agentOnboarding/agent-onboarding.module'
@NgModule({
  imports: [
    CommonModule,
    routing,
    AgentOnboardingModule
  ],
  declarations: [OnboardingComponent],
  exports: [
    OnboardingComponent
  ],
  providers:[OnboardingService]
})
export class OnboardingModule { }
-------------
onboarding.routing.ts
------------
import { ModuleWithProviders } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';

import { RouteShield } from '../../common/guards/route-shield/route-shield.guard';

export const onboardingRoutes: Routes = [
  {
    path: 'agentOnboarding',
    loadChildren: './modules/agentOnboarding/agent-onboarding.module#AgentOnboardingModule'
  },
  {
    path: 'draftEnquiry',
    loadChildren: './modules/draftEnquiry/draft-enquiry.module#DraftEnquiryModule'
  }];
export const routing: ModuleWithProviders = RouterModule.forChild(onboardingRoutes);

------------
agent-onboarding.module.ts
---------------------
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { AgentOnboardingComponent } from './agent-onboarding.component';

import { routing } from './agent-onboarding.routing';

import { HeaderModule } from '../../../../common/modules/header/header.module';
import { FooterModule } from '../../../../common/modules/footer/footer.module';
import { StagesComponent } from './stages/stages.component';
import { RedirectModule } from './../../../../common/components/redirect/redirect.module';


@NgModule({
  imports: [
    CommonModule,
    routing,
    FooterModule,
    HeaderModule,
    RedirectModule
  ],
  declarations: [
    AgentOnboardingComponent,
    StagesComponent,
  ]
})

export class AgentOnboardingModule { }



--------------
agent-onboarding.routing.ts
--------------------

import { Routes, RouterModule } from '@angular/router';
import { AgentOnboardingComponent } from './agent-onboarding.component';
import { ModuleWithProviders } from '@angular/core';
import { RouteShield } from '../../../../common/guards/route-shield/route-shield.guard';
import { RedirectModule } from './../../../../common/components/redirect/redirect.module';
export const agentOnboardingRoutes: Routes = [{
  path: '',
  component: AgentOnboardingComponent,
  children: [{
    path: '',
    redirectTo: 'knowYourCandidate',
    pathMatch: 'full'
  },
  {
    path: 'knowYourCandidate',
    loadChildren: './knowyourcandidate/know-your-candidate.module#KnowYourCandidatesModule',
    canActivate: [RouteShield]
  },
  {
    path: 'bankDetails',
    loadChildren: './bankdetails/bank-details.module#BankDetailsModule',
    canActivate: [RouteShield]
  }
 ]
}];

export const routing: ModuleWithProviders = RouterModule.forChild(agentOnboardingRoutes);



**********************************************************************
            http://localhost:4200/#/dashboard
***********************************************************************
--------------------------
app.module.ts
----------------------------


import { DashboardCountModule} from './product/modules/dashboard-count/dashboard-count.module';
@NgModule({
  declarations: [
    AppComponent,
    NotFoundComponent,
    AccessDeniedComponent
  ],
  imports: [
    BrowserModule,
    HttpClientModule,
    NgHttpLoaderModule,
    NoopAnimationsModule,
    FormsModule,
    ReactiveFormsModule,

    routing,
    AlertMessageModule,
    PreLoginModule,
    SignUpModule,
    LoginModule,
    DashboardModule

  ],
  providers: [
    RouteShield,
    PendingChangesGuard,
    MasterDataService,
    MessageService,
    AlertService,
    CommonService,
    UtilityService,
    HttpService,
    StorageService,
    DocumentUploadService,
    SecurityService,
    UserService,
    {
      provide: HTTP_INTERCEPTORS,
      useClass: ResponseInterceptor,
      multi: true
    },
    EncrDecrService,
    NgxImageCompressService
  ],
  bootstrap: [
    AppComponent
  ]
})

export class AppModule {}

-----------------------------
app.routing.ts
------------------------

import { Routes, RouterModule } from '@angular/router';
import { ModuleWithProviders } from '@angular/core';
import { NotFoundComponent } from './product/common/modules/not-found/not-found.component';
import { RedirectComponent } from './product/common/components/redirect/redirect.component';
import { IcmEnquiriesComponent } from './product/modules/icmEnquiries/icm-enquiries.component';

import { hierarchyRoutes } from './product/modules/hierarchy/hierarchy.routing';
import { movementRoutes } from './product/modules/movement/movement.routing';
import { icmRoutes } from './product/modules/icm/icm.routing';
import { trainingRoutes } from './product/modules/training/training.routing'
import { contentManagerRoutes } from './product/modules/contentManagement/content-manager.routing';
import { commonMasterRoutes } from "./product/modules/commonMasters/common-masters.routing";
import { interfaceRoutes } from './product/modules/interface/interface.routing';
import { queryBuilderRoutes } from './product/modules/queryBuilder/query-builder.routing';
import { warningLetterRoutes } from './product/modules/warningLetter/warning-letter.routing';
export const routes: Routes = [{
    path: '',
    redirectTo: 'prelogin',
    pathMatch: 'full'
  },
  {
    path: 'prelogin',
    redirectTo: 'prelogin'
  },
  {
    path: 'login',
    redirectTo: 'login'
  },
  {
    path: 'dashboard',
    redirectTo: 'dashboard'
  },
{
    path: '**',
    component: NotFoundComponent
  },
  {
    path: 'communicationHistory',
    redirectTo: 'communicationHistory'
  },
  {
    path: 'terminatedAgentListing',
    redirectTo: 'terminatedAgentListing'
  },
  {
    path: 'terminatedAgents',
    redirectTo: 'terminatedAgents'
  }
];

routes.concat(
    hierarchyRoutes
  , movementRoutes
  , trainingRoutes
  , contentManagerRoutes
  , interfaceRoutes
  , commonMasterRoutes
  , queryBuilderRoutes
  , warningLetterRoutes
);

export const routing: ModuleWithProviders = RouterModule.forRoot(routes, {
  useHash: true
});

--------------------------------------
dashboard.module.ts
------------------------------------------


import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { ThemeLoaderModule } from "../../common/modules/themeLoader/theme-loader.module";

import { HeaderModule } from '../../common/modules/header/header.module';
import { FooterModule } from '../../common/modules/footer/footer.module';
import { NgxPaginationModule } from 'ngx-pagination';

import {DashboardComponent} from './dashboard.component';
import { routing } from './dashboard.routing';
@NgModule({
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    ThemeLoaderModule,
    HeaderModule,
    FooterModule,
    routing,
    NgxPaginationModule
  ],
  declarations: [
    DashboardComponent
  ],
  exports: [
    DashboardComponent
  ]
})
export class DashboardModule { }


--------------------------------
dashboard.routing.ts
------------------------------------

import { Routes, RouterModule } from '@angular/router';

import { DashboardComponent } from './dashboard.component';
import { ModuleWithProviders } from '@angular/core';

// noinspection TypeScriptValidateTypes
export const routes: Routes = [
  {
    path: 'dashboard',
    component: DashboardComponent
  }
];

export const routing: ModuleWithProviders = RouterModule.forChild(routes);

************************************************************************
http://localhost:4200/#/movementSetup/knowYourCandidate
************************************************************************

app.module.ts 

MovementModule   // module imported in imports []

-----------------------
movement.module.ts
--------------------
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

import { routing } from "./movement.routing";

import { MovementService } from './services/movement.service';

import { MovementComponent } from './movement.component';

import { MessageService } from '@commonModules/messageBox/message.service';

import {  DocumentUploadExposedService } from "../documentUpload/services/document-upload-exposed.service";
import { NgxMyDatePickerModule } from 'ngx-mydatepicker';

@NgModule({
  imports: [
    CommonModule,
    routing,
    NgxMyDatePickerModule.forRoot()
  ],
  providers: [
    MovementService,
    MessageService,
    DocumentUploadExposedService
  ],
  declarations: [
    MovementComponent
  ],
  exports: [
    MovementComponent
  ]
})
export class MovementModule { }


-------------------------------------------
movement.routing.ts
-----------------------
import { ModuleWithProviders } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';

import { RouteShield } from '@commonGuards/route-shield/route-shield.guard';

export const movementRoutes: Routes = [{
    path: 'individualMovementListing',
    loadChildren: './modules/movementListing/movement-listing.module#MovementListingModule'
  },
  {
    path: 'movementSetup',
    loadChildren: './modules/movementSetup/movement-setup.module#MovementSetupModule'
  }

];

export const routing: ModuleWithProviders = RouterModule.forChild(movementRoutes);


----------------------------------------
movement-setup.module.ts
--------------------------------------
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

import { routing } from "./movement-setup.routing";

import { HeaderModule } from '@commonModules/header/header.module';
import { FooterModule } from '@commonModules/footer/footer.module';
import { MovementStagesModule } from "./childModules/movementStages/movement-stages.module";

import { MovementService } from "./../../services/movement.service";

import { MovementSetupComponent } from './movement-setup.component';

@NgModule({
  imports: [
    CommonModule,

    routing,

    HeaderModule,
    FooterModule,
    MovementStagesModule
  ],
  providers: [
    MovementService
  ],
  declarations: [
    MovementSetupComponent
  ],
  exports: [
    MovementSetupComponent
  ]
})
export class MovementSetupModule { }

-------------------------------------------------
movement-setup.routing.ts
------------------------------------------------
import { Routes, RouterModule } from '@angular/router';
import { ModuleWithProviders } from '@angular/core';
import { RouteShield } from '@commonGuards/route-shield/route-shield.guard';

import { MovementSetupComponent } from './movement-setup.component';

import { RedirectComponent } from "@commonComponents/redirect/redirect.component";

export const movementRoutes: Routes = [{
  path: '',
  component: MovementSetupComponent,
  children: [{
    path: '',
    redirectTo: 'knowYourCandidate',
    pathMatch: 'full'
  },
  {
    path: 'knowYourCandidate',
    loadChildren: './childModules/movementKyc/movement-kyc.module#MovementKycModule',
    /* canActivate: [RouteShield] */
  }]
}];

export const routing: ModuleWithProviders = RouterModule.forChild(movementRoutes);
---------------------------------------
movement-kyc.module.ts
------------------------------------
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';

import { MaterializeModule } from 'ng2-materialize';
import { NgxMyDatePickerModule } from 'ngx-mydatepicker';

import { CommonMaterialModule } from '@commonModules/materialModule/common-material.module';

import { routing } from "./movement-kyc.routing";

import { MovementKycComponent } from './movement-kyc.component';

@NgModule({
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    MaterializeModule.forRoot(),
    CommonMaterialModule,
    routing,
    NgxMyDatePickerModule.forRoot()
  ],
  declarations: [
    MovementKycComponent
  ],
  exports: [
    MovementKycComponent
  ]
})
export class MovementKycModule { }

------------------------------
movement-kyc.routing.ts
-----------------------------
import { ModuleWithProviders } from '@angular/core';
import { Routes, RouterModule }  from '@angular/router';

import { MovementKycComponent } from './movement-kyc.component';

export const routes: Routes = [{
  path: '',
  component: MovementKycComponent,
  children: []
}];

export const routing: ModuleWithProviders = RouterModule.forChild(routes);



