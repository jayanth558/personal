FPAMC
Request URL: http://10.28.18.92:8680/ExideLife/doc/downloadDocumentById/266518

AP007917 docs not working

sts 

BM AMC houser
sm BM amc houser


AP007923  BNHPC0972P  02-12-1948 AGAMC Fresh Fail URAP0059785990 Pending Exam Re appear
AP007924  BNHPC0072S  03-01-1925 FAAMC Fresh  Absent URAP0059785991 Absent
BNHPC0583H 02-12-1948 AP007920 Fresh  FAAMC  Profile questions,  Advisor Declaration form,SMS Link

Fail
Absent

agfa 

BNHPC0882E 14-01-1973 AP007919 Others FPAMC  Agreement

BNHPC0882E 14-01-1973 AP007919 Others FPAMC  Agreement
BNHPC0972Q 03-01-1924 AP007921 Others PAAMC  POS declaration,Advisor Declaration form, Agreement, SMS Link
BPXPZ1234S 22-09-1990 AP007922 Fresh  AGAMC Reonboarding , Profile question, Advisor Declaration form, POS Resignation Letter, SMS Link

----reonboarding------------
Identity Proof (disabled), Education Proof, Address Proof
sewak  AP007563  BPXPZ1234S  22-09-1990 AP007922
AEVPN1243F  04-11-1996   AP007581
AP007589  BNHPC0772Q 04-11-1948  AP007595 FAAMC 
AP007821  BNHPC0972A 03-01-1924

AP007901  BNHPC0592J 02-12-1948 AP007910
AP007560 ABWPS4163P  01-09-1990  

score 12


ARF  

AP007275  BNHPC0572W  04-11-1948

02-11-1973  BNHPC0572O Application No : AP007274

Application No : AP007270  08-11-1973  BNHPC0572M 


Application No : AP007263

BNHPC0572Y  15-08-1947
Application No : AP007266


01-11-1945  BNHPC0572T Application No : AP007267


AP007264 BNHPC0572W 15-08-1947

AP007550 15-08-1947, BNHPC9572Q


BNHPC0572M  08-11-1973   AP007269




*****************
BM, CDM Present. BM-CDM-AM
****************
BM scrutinity
BM Assessement, BM Declaration

CDM scrutinity
CDM Assessement, CDM Declaration

AM can see all Assement questions. documents hide.

**************
BM Absent, CDM Present 
****************

CDM scrutinity
CDM Assessement, CDM Declaration

AM can see all CD Assement questions & Intiatorquestions. approve ,reject documents.

BM scrutinity
BM Assessement, BM Declaration

**************
BM Present CDM Absent
****************
BM scrutinity
BM Assessement, BM Declaration


AM can see Initiator question, BM Assement questions & CD Assemet not applicable. 

 documents hide.

**************
CD Scrutinity screen
****************
CDM Assessement, CDM Declaration 

remaning all hidden















AP007825 BNHPC0502Q  07-01-1953



bm-cdm-amc-
am-ho-
bm- am-

tab- 


AP007689

fetchDocumentsAndCallInitDocument
onSubmit
BNHPC0573E

getOldApplicationNumber:'/onBoarding/getOldApplicationNo/',
    getIntermediaryEntity:'/onBoarding/getIntermediaryEntity/',

 responseData.kyc.personalDetails.salutation='';
        responseData.kyc.personalDetails.emailInfo.emailAddress = '';

controlArray.controls[index].get('actionFlag').setValue('U');

fetchAgentCodeDetails: '/exidelifeInterface/getAgentDetails/',
fetchEmployeeMobileDetails: '/exidelifeInterface/getAgentMobileDetails/',

getOldAppNoAndIntSeq:'/onBoarding/getOldAppNoAndIntSeq/',
fetchUpldDocfileContent:'/exidelifeInterface/fetchUpldDocfileContent/'
fetchsequenceNO: '/exidelifeInterface/getSequence/',


http://10.28.18.92:8680/ExideLife/questionnaire/saveQuestTransaction/

Request URL: http://10.28.18.92:8680/ExideLife/questionnaire/getQuestionByCategory/15750

Request URL: http://10.28.18.92:8680/ExideLife/onBoarding/getOldAppNoAndIntSeq/BNHPC0573W
56993

=======Reonboarding========
Profile Questions , 3 Documents, score


applicantListing

AP007788  BNHPP0572J 01-01-1972    Initiator questions-12 fee-1950.0
AM Approval BM Assessement -8, BM Declaration (Rejected, Approved Documents)
AMC Approval claimed application, BM Assessement (Table Format) (Rejected, Approved Documents)


AP007789 others-fbamc BNHPG0572J  02-01-1947  Initiator questions-11  fee-1950.0
AM Approval Filled BM Assessement -9, BM Declaration (1st time (Rejected, Approved Documents))
AMC Approval claimed application, BM Assessement (Table Format) (Rejected, Approved Documents))


SM- Application No : AP007797  PAN No : BNHPD0572J  02-12-1948 others-FBAMC  Initiator Questions-9 Fee-1950
AM -Filled BM Assessement -10, BM Declaration (Rejected BankDocument,signature))
SM -Reuploaded BankDocument,signature & saved
AM -(Rejected BankDocument, Approved signature)
SM- Reuploaded BankDocument & saved.
AM -(Approved signature i.e approved all documents).




AMC Approval claimed application, BM Assessement (Table Format) (Rejected, Approved Documents))



AP007760  BNHPJ0572J 03-01-1924

SM-BM-CDM- AMC-AM-HO

01-12-1922 BNHPC0052Q  AP007744 FAAMC
AP007745
AP007746
AP007747
AP007748
AP007785


01-12-1922  BNHPC0092Q  AP007743


BNHPC0982X  AP007736 12-12-1948  15766



AP007734   BNHPC0577G   1-12-1949  15764
AP007735 15765
AP007740 15770
AP007741 15771
AP007742 15772

AP007732 BNHPC0275Y  10-12-1948  15762
AP007733  15763


BNHPC0573E 02-12-1948  AP007730  15760
AP007731  15761

01-12-1947 BNHPC0573W fresh agamc
15746  Application No : AP007716
new 15750

 tmpSaveObj.importData(this.transactionId, this.transactionType, this.stageName);
this.questionLoaderService.saveQuestionnaire
questionnaireSave-detail.ts


 fetchSaveData() {


682, 

getBranchSupervisor

let data = this.officeUseData;
	this.isEditFlow = true;
===============
reonboarding
================



BNHPC1672E  AP007597 FAAMC  01-11-1922

Request URL: http://10.28.18.92:8680/ExideLife/exidelifeInterface/dedupeCheckForPanAndAadhar/


Request URL: http://10.28.18.92:8680/ExideLife/onBoarding/getTransDataForReOnboarding/BPXPZ1234S
fetches reonboarding data

isAGAndFAReOnboarding

------------movement flow--------
BM - AMC - HO
SM-AM - AMC - HO
sm-am- AMC - HO
MOV10143
-------------onboarding flow----
FRESH -AG ,FA PRofile questions


SM - BM - AMC


others FPAMC  -- No sms link
 
others PAAMC

fresh AGAMC, FAAMC
other 


AP007576  BNHPC0772Q 04-11-1948 
AP007577  BNHPC9572S 04-11-1949
AP007574  BNHPC0562G  04-11-1948
AP007578  BNHPC0527A 01-11-1973

04-11-1948  BNHPC0322G  AP007570


BNHPC0562G  04-11-1948 AP007572

BNHPC0472E  AP007564 13-11-1995

getTransDataForReOnboarding
isAGAndFAReOnboarding


AP007808  BNHPU0572J  03-01-1923

AP007586   Fresh FAAMC
AP007584  Fresh AGAMC



Request URL: http://10.28.18.92:8680/ExideLife/onBoarding/claimApplication/

AP007553, AP007554 - Reonboarding -AM-HO

others - paamc
AP007558







In which stages application will get rejected.

Annual Income

transactionId



AgentOnboardingModule
agent-onboarding.routing.ts

15723

16-11-21




ASSESSEMENT PAGE

Branch/Partner  FIELD

Request URL: http://10.28.18.92:8680/ExideLife/onBoarding/getChannelDetails
689 LENGTH.


Request URL: http://10.28.18.92:8680/ExideLife/onBoarding/getSupervisorDetails


stages.component.ts


MULTISELECTexecution-template.component.html

  qnOptions : any = ['35-50 km', '15-35 km'];
 {{qnOptions}} 
<md-select id="{{controlData.questionDetails.questionId}}" multiple class="mdSelectFix m-t-6P" 
 name="roles" (change)="valueChanged('test')" [(ngModel)]='qnOptions'
 >
<md-option *ngFor='let qnOpt of controlData.questionDetails.qnOptions' [value]="qnOpt.optionDesc">{{qnOpt.optionDesc}}</md-option>
</md-select>




ToggleControlComponent
dropdown-control.component.ts

salesForceExecutionTemplate query-builder.routing.ts
 <div *ngSwitchCase="'MULTISELECT'">
                                    <md-select multiple [(ngModel)]="fields.value" attr.id="drp_{{fields.fieldId}}" id="drp_{{fields.fieldId}}"
                                      class="mdSelectFix m-t-6P width-100P" placeholder="{{fields.fieldName}}">
                                      <md-option *ngFor="let itemOpt of fields.options " [value]="itemOpt.val ">{{itemOpt.label}}</md-option>
                                    </md-select>
                                  </div>

scrutinity page 

1)Request URL: http://10.28.18.92:8680/ExideLife/onBoarding/getapplicantsearchlist
Request Method: POST

Approve

2)Request URL: http://10.28.18.92:8680/ExideLife/docUpload/reqDocActionTaken/
Request Method: POST

save

3)Request URL: http://10.28.18.92:8680/ExideLife/docUpload/updateUploadedStatus/
Request Method: POST



 this.applicationId = saveData.sequence
storageService.storeObject('saveData', draftSaveJSON)

ibr bulkuplod

<md-select id="ddlRoles" multiple class="mdSelectFix m-t-6P" placeholder="{{screenLabels.roles}}"
                      [ngClass]="{mandatoryField:saveUpdateObj.accessMode=='RESTRICTED'}" name="roles" [(ngModel)]='saveUpdateObj.roles'
                      formControlName='templateRoles' [disabled]='disableRoles'>
                      <md-option *ngFor='let opt of rolesList' [value]="opt.role">{{opt.role}}</md-option>
                    </md-select>

<md-select id="{{controlData.questionDetails.questionId}}" multiple class="mdSelectFix m-t-6P" 
 name="roles" (change)="valueChanged('test')" [(ngModel)]='qnOptions'
 >
<md-option *ngFor='let qnOpt of controlData.questionDetails.qnOptions' [value]="qnOpt.optionDesc">{{qnOpt.optionDesc}}</md-option>
</md-select>



MOV10146 60439423

adress details





contact 

approveReuploadDocOnRejection



https://mycms.exidelife.in/ExideLife/onBoarding/verifyUrlForDocument/


FP
this.educationDetails.length

isClassxInValid


POSTGRADUATE
PQMAR
AFIII
AFICAI
AFICWAI
AFICSI
AFASI
MBA
OT
LAW



Validators.required
274
XIIDtPassing
GradDtPassing

	this.educationalDetailForm.get('graddtofpassing').setValue(null);

this.edudynaform.controls.education1.value._d=''





this.edudynaform.controls
this.edudynaform.get('educationbind1').setValue(null); 


MOV10135 60188961
MOV10136  60197225

if(this.reOnboardingPOS == true){
								var controls = this.myForm.value.documents;
								for(var i = 0; i < controls.length; i++) {
									if(( controls[i].docName == "POS Resignation Letter" && this.reOnboardingPOS  == true) && controls[i].fileName == '') {
										this.showDeclaration = false;
										alert('POS Resignation Letter Not generated. Reupload signature');
									}
								}	
							}



validateForm


var controls = this.myForm.value.documents;
if(( controls[i].docName == "POS Resignation Letter" && this.reOnboardingPOS  == true) && controls[i].fileName == '') {
					alert('POS Resignation Letter Not generated');
					flag = false;
				}




if(this.reOnboardingPOS == true && elem.docName == "POS Resignation Letter" && (elem.fileName ==''|| elem.fileName ==undefined|| elem.fileName == null)){
								
								//this.mandatoryUploadedDocument++;
								this.showDeclaration = false;
							}
if(this.reOnboardingPOS == true && element.docTypeMap.documentTypeMaster.label == "Advisor Declaration form"){
					this.mandatoryDocumentForUploading++;
				}

if (!localStorage.getItem('val')) { 
      localStorage.setItem('val', 'no reload') 
      window.location.reload();
    } else {
      localStorage.removeItem('val') 
    }

getOldApplicationNumber



Application No : AP007594
score-8   fee-700

Application No : AP007596
fresh agamc


AP007597
fresh faamc



if(doc.docName == "POS Resignation Letter" && this.reOnboardingPOS == true) {
							this.downloadPOSResignationLetter = "downloadPOSResignationTemplate";
						}

[10].docTypeMap.documentMaster[0].val



10.26.10.92

IdProof
AP007471
AP007537
AP007537
\this.adressProofChanged == false
&& this.eduProofChanged ==false

if(subQnObj.questionDetails.qnNumber == '5 a)'  && ( this.occupationProfile == 'Business/Self Employed' || this.occupationProfile == 'Retired') ){
                    subQnObj.questionDetails.isVisible = true;
                  }

                  if(subQnObj.questionDetails.qnNumber == '6 a)'){
                    subQnObj.questionDetails.isVisible = true;
                  }




Employed/Service

Retired
Business/Self Employed




eduProofChanged
adressProofChanged


getIntermediaryEntity

/onBoarding/getDraftDetailByAppNo/{appNum}


  fetchDraftSave(inputObj: any) {



this.reOnboarding
absorbJSON

    this.reqActionId  = "2";
    this.reqAction ='3';
    this.reqActionTaken = true;

isReOnboardingPOS, isReOnboarding
if(draftSave.transData.arfInfo.isReOnboarding == true && draftSave.transData.arfInfo.isReOnboardingPOS == true){
			this.reOnboarding = true
		}

 if(req.docType == 'Education Proof' || req.docType == 'Address Proof' || req.docType == 'Identity Proof'){
                    req.reqActionId="2",
                    req.reqAction = "2",
                    req.mandatory = "2"
                  }


{
docId: 264690
docName: "FAS"
isRmuChecked: false
mandatory: false
reqAction: "2"
reqActionDt: "05/10/2021"
reqActionId: "2"
reqAging: "43"
reqApprover: "sewak"
reqColor: "#f18039"
reqName: "Income Proof"
reqSubmissionDt: "05/10/2021"
}

AP007531

AP007291

id="ddlDocType_{{i}}"

[ngClass]="{'mandatoryField': document.controls.isMandatory.value == 1}"

"[(document.controls.isMandatory.value == 1) ? 'mandatoryField' : '',
(document.controls.docName.value == 'Education Proof' || document.controls.docName.value == 'Address Proof' ||
                               document.controls.docName.value == 'Identity Proof') && reOnboarding ? 'disabled disablePointer disabledCtrl' : '']"


[ngClass]="[(document.controls.docName.value == 'Advisor Declaration form' || document.controls.docName.value == 'Agreement' || 
                              document.controls.docName.value == 'POS Declaration Form') ? 'disabled disablePointer disabledCtrl' : '',
                              
                                (document.controls.docName.value == 'Education Proof' || document.controls.docName.value == 'Address Proof' ||
                               document.controls.docName.value == 'Identity Proof') && reOnboarding ? 'disabled disablePointer disabledCtrl' : '']"

lllllllllll
setInterval(function() {

},0)





-{{controlData.questionDetails | json}}
dropdown-control.component.html
2341--main 
questionGroupList
question-detail.ts
"isVisible": false

saveQuestions
removing un-wanted subquestions 

{{qnGroup.renderList | json}}

2592-----unwqnted subquestions
-{{controlData.questionDetails | json}}
242-199
displaySubQuestion
348

AP007171

let parentQns = qnGrp.questMasterJson.filter(
        qn => {
          return childQnList.findIndex(
            childQnObj => {
              return childQnObj.childQnId == qn.questId;
            }
          ) == -1;
        }
      );



4 Wheeler
applicant-view.component.html
 <ngx-questionnaire  [jobTitle]="jobtitle" [disabledfield]="disabledData" [questionnaire]="questionnaireData"></ngx-questionnaire> 
 

applicant-information.component.html


 let draftSave = this.storageService.getObject('saveData');

    if (draftSave.transData.kyc2.questionnaire && draftSave.transData.kyc2.questionnaire.length > 0) {
      this.questionnaireData =draftSave.transData.kyc2.questionnaire;
    }


AP007507

1.2
3.0
application/octet-stream;

TMS

applicant-information.component.ts


http://10.28.18.24:8680/ExideLife/hierarchy/getModulelist/99995/CONTACT/
http://10.28.18.24:8680/ExideLife/hierarchy/getAgentIndividualDetailsList/60181691
http://10.28.18.24:8680/ExideLife/hierarchy/checkMobileNumber/9699432843
http://10.28.18.24:8680/ExideLife/hierarchy/getAgentJsonCompare/

nb
verifyUrlForDocument

60251630 -- MOV10087
60074459 MOV10088
60251161  MOV10093


BNHPC0572M,05-11-1948 - AP007497
AP007492
fileContent



	// this.commonService.fileContent.subscribe(
		// 	val => {
		// 		debugger;
		// 		if(val.documentName == 'Address Proof'){
		// 			this.oldAdressFileContent = val.base64
		// 		}
				
		// });







AP007391


AP116511

this.seqId


edc, identiy, adress

01-10-1947  BNHPC0878O  AP007484  -  AP007481

On Boarding - Application No : AP007484 - other - FPAMC 

Uploaded Docs

Signature, Bank Document, adress proof, aadhar proof, identity proof, Aggrement


Re Boarding Application No : AP007487 - Fresh - FPAMC 

Uploaded Docs

Photo, Signature, identity proof, Education Proof, Adress Proof, Advisor Declaration form, Bank Document



AP007473


  

AP007470
https://gateway2.exidelife.in/ExideLife/docUpload/saveReuploadDocOnRejection

http://10.28.18.24:8680/ExideLife/docUpload/reUploadDocs

AP007472


viewFileFromFileNet
AP114697
Request URL: https://mycms.exidelife.in/ExideLife/interface/viewFileFromFileNet/901C31C6-A0A7-4844-9270-683727635B47
externalUrl: "null"

'sta12'-

downloadPDFFile
Request URL: https://gateway2.exidelife.in/ExideLife/onBoarding/downloadPDFFile/AP006266/FT-02

01-10-1947
BNHPC1573K
Application No : AP007462
---reonboarding------------
AP007467


http://10.28.18.24:8680/ExideLife/onBoarding/uploaddocs/


-------
AP117273
-------------

15-08-1947
BNHPC0542J
 AP007450


AP117260
ScrutinyPending Requirements


MOV9909 - 60369073
60308127
MOV10004
60040677
downloadDoc(applicant.appLetterLink,applicant.externalUrlWelcomeLatter,'Welcome_Letter.PDF')"
(click)="downloadDoc(applicant.transcriptLink,applicant.externalUrlTranscipt,'Transcript_Link.PDF')"
(click)="downloadDoc(applicant.appID,applicant.externalUrlIDcard,'ID_CARD.PDF')"


fp fc 
externalUrlIDcard
externalUrlTranscipt
externalUrlWelcomeLatter
agentCode

requirement letter


appID: "/onBoarding/downloadPDFFile/AP007443/FT-04"
appLetterLink: "/onBoarding/downloadPDFFile/AP007443/FT-02"


appID: "/onBoarding/downloadPDFFile/AP007344/FT-04"
appLetterLink: "/onBoarding/downloadPDFFile/AP007344/FT-02"

appID: "/onBoarding/downloadPDFFile/AP007293/FT-04"
appLetterLink: "/onBoarding/downloadPDFFile/AP007293/FT-02"


(applicant.appLetterLink, applicant.externalUrlWelcomeLatter, 'Welcome_Letter.PDF', applicant.transcriptLink, applicant.externalUrlTranscipt, 'Transcript_Link.PDF',
applicant.appID,applicant.externalUrlIDcard,'ID_CARD.PDF')


@ViewChild('SMSblock') SMSblock;
this.SMSblock.open();


Request URL: http://10.28.18.24:8680/ExideLife/movement/saveMovement/
movement-portfolio.component.ts
checkFeeStageRequired

          if(fetchedDocObj && fetchedDocObj.documents){
            fetchedDocObj.documents.each((doc)=>{
              if(doc.docTypeMap && doc.docTypeMap.documentTypeMaster && doc.docTypeMap.documentTypeMaster.val == 'Signature'){
              console.log('hello');
              }
            })
          }

MOV150750
MOV150751

uploded by - remarks


AP007267

60038475-MOV10035

04-10-1973
BNHPC0575J
Application No : AP007344

Application No : AP007347
line 455 this.seqId = draftSaveData.transId;


6 line 722

Documents are not applicable for this Agent.


BNHPC0576J
04-10-1973
AP007346

document-upload.component.ts

draftSaveData.transData.arfInfo.isReOnboarding

transId: "AP007254"



Request URL: http://10.28.18.24:8680/ExideLife/docUpload/fetchUpldDocDtls/AP006874
document-upload.service.ts

 fetchDocuments(seqId: String) {
    let httpObj = new HttpModel(
      configuration.partialURLs.fetchDocuments + seqId,
      null,
      configuration.callType.GET
    );

    return this.httpService.invokeHttp(httpObj);
  }


tba



ggg
kkk

kkkjjjjkkkkkkkkkkkkkkkkkkkkkkjjjjjjjjjjjjjjkk


header.component.css

.navbar-inverse .navbar-nav.menu-effect>li>a{
/* color: #fff !important; */
color: #ccc !important;
}


draft-enquiry.component.html


know-your-candidate.component.html



photo -approved- adf(approved)
sign - approved- 3 documents (approved)
sign - rehected - (3 documents)
phot rejected - adf rejected


http://suatapp00041.in.intranet/ExideLife/login/loginDetail

http://suatapp00041.in.intranet/ExideLife/login/loginDetail
docId: 1679704
docName: "DA"
isRmuChecked: false
mandatory: false
reqAction: "2"
reqActionDt: "29/09/2021"
reqActionId: "2"
reqAging: "7"
reqApprover: "c101946"
reqColor: "#f1dc39"
reqName: "Advisor Declaration form"

---------------------------
docId: 1683515
docName: "AC"
isRmuChecked: false
mandatory: false
reqAging: "5"
reqColor: "#f1dc39"
reqName: "Agreement"

 
dcf_quest_ 


Application No : AP006242

ap116256

MOV9909   60185559 9893633163

error: "connectionFaliure"
----------------------------------------
faamc

AGAMC-Fresh - tigency - AP007268
 
BM- AP007268 

Profile Score -11 & Fee -1000

BM Rejected Photo,Sign & Approved Remaning Docs

SM Updted photo sign, verifed documents from sms link

Now bm rejected photograph 

SM uploded photo,  verifed documents from sms link

BM approved photo

HO Rejected signature & approved remaning docs

SM uploded signature, verifed documents from sms link

BM Approved signature

HO Approved signature


************************************
BM
************************************
Bm - HO
Ho-BM

-------------------------------------------

PAAMC | OTHER |  tide agency AP007269 

BM  Application No : AP007287


Profile Score -   & Fee -500.0


BM Rejected all Documents Except Photo, sign

SM Approved All Rejected Documents & Saved

BM Approved all documents

HO Rejected photo,sign, bank document & approved remaning docs

SM Uploaded photo,sign, bank document, verifed documents from sms link

BM Approved photo,sign, bank document

HO Approved photo,sign, bank document 

************************************
BM
************************************
Bm- BM Scrutinity

----------------------------------------------------------------

FPAMC | OTHER |  tide agency AP007270

Profile Score -  Fee-1950.0 

BM Rejected BankDocument, Signature
SM Uploded BankDocument, Signature
BM Approved BankDocument, Signature


7276



AP007252



marring-single
photho - signature 



FPAMC

FP|FC
PAAMC













01-09-1971  BNHPC0572J
Application No : AP007253

canActivate: [RouteShield]

60069345
60024357
60016587
60008699
-------------
60245702
60271135
60439335
60207180
60341570-MOV10025


-----------------------------------------------------
alert messages
---------------------------------------------

C:\workspace\angular5\src\app\product\common\properties\form-messages.ts
C:\workspace\angular5\src\app\product\modules\movement\modules\movementSetup\models\movementSetup.config.ts


60138495



60094356 - mov9988
60033040- MOV9993
60069345 - MOV9996
60246564- MOV9997
60181687 - MOV10002
60015575-MOV10004
*******************************************************************
TMS
*******************************************************************
C:\TMS-Workspace\branches\DT\training-portal-CR-4303\training-portal\WebContent\layout\js\moduleadmin\view\appuserselection.js


C:\Users\c101979\Downloads\apache-tomcat-9.0.53-windows-x64\apache-tomcat-9.0.53\confcontext.xml
 <ResourceLink auth="Container" global="jdbc/MSSQL_TMSRepo" name="MSSQL_TMSRepo" type="javax.sql.DataSource"/>
    <ResourceLink auth="Container" global="jdbc/MSSQL_TRAINING_PORTAL_HRIS" name="MSSQL_TRAINING_PORTAL_HRIS" type="javax.sql.DataSource"/>




manageAgentCode


tomcat-9.0 


userAccountControl == "512"



 this.agentId = this.draftSaveJSON.transData.individualDetails.agentCode;


http://localhost:4200/#/manageAgentCode







http://localhost:4200/#/movementSetup/portfolio

http://10.28.18.24:8680/ExideLife/movement/PaymentRealizationCheck
http://10.28.18.24:8680/ExideLife/exidelifeInterface/approveIndividualMovement
http://10.28.18.24:8680/ExideLife/notificationservice/getLatestNotificationsCt/HOUSER
ttp://10.28.18.24:8680/ExideLife/movement/getMovementSearchList/
http://10.28.18.24:8680/ExideLife/movement/getMovementMaster/Agent
http://10.28.18.24:8680/ExideLife/channelMaster/getSubChannelDetails/
60369073 MOV9899


this.mobileForm.controls.mobileNo.setValue(this.individualMobileInfo.phoneNum);   

http://10.28.18.24:8680/ExideLife/movement/getBranchAgentList/

saveMovement/
saveAgentData

this.draftSaveJSON.transData.mobileOldValue = ''
        this.draftSaveJSON.transData.mobileNewValue = ''

2175

jdk 1.8.0.45
sts/eclipse


2698 -pushing
60010119

1157 // mobile json


PROMOTION: Array(16)
0: "dtEffFrom"
1: "ddlMovReasons"
2: "ddlRequestedBy"
3: "reasonDetails"
4: "ddlNewDesignation"
5: "ddlNewJobTitle"
6: "supervisorDetails"
7: "mentorDetails"
8: "monitoringDetails"
9: "branchDetails"
10: "ddlPortfolioOwnership"
11: "ddlSubOwnership"
12: "ddlMntOwnership"
13: "ddlProtegeesOwnership"
14: "btnAgentSave"
15: "btnReset"
length: 16
[[Prototype]]: Array(0)
REINSTATEMENT: Array(11)
0: "dtEffFrom"
1: "ddlMovReasons"
2: "ddlRequestedBy"
3: "reasonDetails"
4: "ddlNewJobTitle"
5: "supervisorDetails"
6: "mentorDetails"
7: "monitoringDetails"
8: "branchDetails"
9: "btnAgentSave"
10: "btnReset"
length: 11

*ngIf="displaySections('mobileNumber')"


 initializeMobileForm() {
    this.mobileForm = this.formbuilder.group({
        mobileType: ['', Validators.required],
        landLineCode: [''],    
        mobileNo: ['', Validators.compose([Validators.required, Validators.maxLength(10), Validators.pattern(/^[6789](\d{9})$/)])]
    });
}

 <!-- New Category -->
                  <div class="col-sm-3 collapsibleMarginTop" *ngIf="displaySections('ddlNewDesignation') && newAgent.branchChannelName" [class.disabledCtrl]="isEditFlow || isTransferTypeChange">
                    <md-select id="ddlNewDesignation" class="mdSelectFix6 mandatoryField" placeholder="{{screenLabels.ddlnewCategory}}"
                      name="ddlNewCategory" [(ngModel)]="newAgent.newDesignation" formControlName="newDesignationCntrl" (change)="designationChanged($event.value)"
                      [disabled]="isTermination || isEditFlow || isDesignationChange">
                      <md-option *ngFor="let movDesgn of newDesignations" [value]="movDesgn.val">{{movDesgn.label}}</md-option>
                    </md-select>
                    <div class="errorMessageSelect" *ngIf="!agentMovementForm.controls['newDesignationCntrl'].valid && agentMovementForm.controls['newDesignationCntrl'].touched">
                      {{screenMessages.validations.designation.required}}
                    </div>
                  </div>

let jsonData = this.storageService.getObject('movementdetails')

60156516- deleted
agentMovementForm

210822

this.agentMovementForm.controls['urn1'].disable();

ddlNewDesignation
movementSetup.config.ts
form-messages.ts

populateSupervisor

endorsement
newDesignationCntrl 
subOwnershipCntrl disabled in reinstatement

mobileForm

fetchDefaultDetails

this.contactArray[0].phoneNum

disbleControl

this.showPersonalDocsUpload = false;

this.agentMovementForm.controls.mobileNumber.setValue(this.contactArray[0].phoneNum);

https://gateway2.exidelife.in/ExideLife/hierarchy/getEndorsementlist/


Testentity3

entity-portfolio.component.ts

vivek.c101782@exidelife.in
8900485755


Request URL: http://10.28.18.24:8680/ExideLife/hierarchy/getAgentList


portfolioApprove

movement-stages.component.ts
approveMovementRemark

https://spinapp00065.in.intranet/svn/ChannelManagementSystem/trunk/DEV/UI/angular5/src/app/product/modules/onboarding/modules/agentOnboarding/document-upload/document-upload.component.ts

modules/documentUpload/childModules/documentUploadLoader/document-upload-loader.component.ts

Error in Approval for Agent

${result.result}



Request URL: http://10.28.18.24:8680/ExideLife/entity/saveEntityEndorsementDetails
Request URL: http://10.28.18.24:8680/ExideLife/entity/saveEntityEndorsementDetails

sewak
entity listing 
p90

entity endorsement screen 
-------type------
parter/branch

CABR  IBR   
BANCA
CABR - IBR brokerof delhi bo123

entitysetuo/entitydetails

/*------code Optimization V1-------*/  

60325658
C:\workspace\angular5\src\app\product\modules\onboarding\modules\agentOnboarding\applicantinformation\applicant-information.component.ts
line no 98,
line no 112

C:\workspace\angular5\src\app\product\modules\onboarding\modules\agentOnboarding\educationaldetails\educational-details.component.ts

line no 69, 
line no 269

C:\workspace\angular5\src\app\product\modules\questionnaire\modules\questionnaireLoader\questionnaire-loader.component.ts
line no 1760
line 2037

C:\workspace\angular5\src\app\product\modules\onboarding\modules\agentOnboarding\document-upload\document-upload.component.ts
line no 700
line no 895
line no 1125
line no 1077

C:\workspace\angular5\src\app\product\modules\onboarding\modules\workbench\workbench.component.ts
line no 127
line no 165
line no 700

C:\workspace\angular5\src\app\product\modules\movement\modules\movementSetup\childModules\movementAssessment\movement-assessment.component.ts
line 37
line 583

IbR - 


if((agentOldDesignation == 'AG' || agentOldDesignation == 'FA') && movementType =='PROMOTION' && agentNewDesignation == 'F'){

this.elementRef.nativeElement.querySelector('.ind-address-det-wrap .collapsible-body').style.display = 'none';

let bodyEl = jQuery('#adressDetails > mz-collapsible> ul > li > .collapsible-body');
                let headEl = jQuery('#adressDetails > mz-collapsible > ul > li > .collapsible-header.active');

                bodyEl.css('display', 'block');
                headEl.addClass('active');
                event.cancelBubble = true;



jasiy, other, fpamc 
profile question...
AGAMC

Transaction NoMOV9821   
60439440  



AP007036


60226647 MOV9812
60369073 MOV9815
60439438

60438120  MOV9816
60369073 MOV9815
60438211


60399358
60245702  MOV9820
Pending Movement Info
10.26.14.65













Pending Movement Assessment

str status

agreement other -1 sign  ------------entry
agreement sign -1 
agrement ------------entry

AP083812



  




Pending Movement Documents


Pending Movement Portfolio
movement fee
Processed
*****************************************************************************
sql  
*****************************************************

********************Re onboarding queries**********************
select * from vw_basic_details where producersourcecd in (
select producersourcecd from cms_producerchannel_m where designationcd in('PAAMC','PAPOS') and producersourcecd is not null )

select * from com_client_m where clientseq='2640520'



select * from vw_basic_details where producersourcecd in (
select producersourcecd from cms_producerchannel_m where designationcd in('PAAMC','PAPOS') and producersourcecd is not null )

select * from com_client_m where clientseq='2197466'

SELECT *  FROM [PROJECT].[dbo].[COM_APPLICANT_SMS_COMMUNICATION] order by COMMUNICATIONID desc



sql server client
DT sql server... 
database

select * from BKP_CMS_PRODUCERCHANNEL_M_253 where PRODUCERSTATUSCD = 'TERMINATED' AND DESIGNATIONCD='AGAMC' ;

Database connection
10.26.10.84,1102
10.26.10.99,1101
appuser
CmsApp@6912

 [ngClass]="[(document.controls.docName.value == 'Advisor Declaration form' || document.controls.docName.value == 'Agreement' || 
document.controls.docName.value == 'POS Declaration Form') ? 'disabled disablePointer disabledCtrl' : '',

  (document.controls.docName.value == 'Education Proof' || document.controls.docName.value == 'Address Proof' ||
 document.controls.docName.value == 'Identity Proof') && reOnboarding ? 'disabled disablePointer disabledCtrl' : '']"


 [ngClass]="{ 'disabledCtrl': document.controls.docName.value == 'Advisor Declaration form' || 
document.controls.docName.value == 'Agreement' || document.controls.docName.value == 'POS Declaration Form' }"



SELECT * FROM [dbo].[dcf_quest_transaction] where TRANS_Id = '15386'


For movement user update Query – 
  use MDM_COMPANY;

  select * from [dbo].[OBD_BM_DETAILS] order by 1 desc;

  update OBD_BM_DETAILS set STRUSERNAME ='vivek'  where NBMSEQ = 30460;

  select * from [dbo].[OBD_REVP_DETAILS] order by 1 desc;

  update OBD_REVP_DETAILS set STRUSERNAME ='am'  where NREVPSEQ = 41026;

For Question Score – 
use MDM_COMPANY;

select * from  CMS_Quest_Score where Applicationcd = 'AP006674';



use MDM_COMPANY;

select * from vw_basic_details where producersourcecd in (
select producersourcecd from cms_producerchannel_m where designationcd in('PAAMC','PAPOS') and producersourcecd is not null )

select * from com_client_m where clientseq='2287504'

SELECT *  FROM [PROJECT].[dbo].[COM_APPLICANT_SMS_COMMUNICATION] order by COMMUNICATIONID desc

select * from obd_fee_staging order by 1 desc
update obd_fee_staging set strappno='AP007263', STRUPDATESTATUS='NO' where nid=55340

select * from [dbo].[CMS_BATCH_LOGGING]

update [CMS_BATCH_LOGGING] set batchstartflag='Y' where batchid=2

select * from [dbo].[CMS_BATCH_SCHEDULE_M]

update [CMS_BATCH_SCHEDULE_M] set dtbusiness='2021-11-24',batchflag='Y'

select * from  dcf_docupload_dtls order by 1 desc
select * from BKP_CMS_PRODUCERCHANNEL_M_253 where PRODUCERSTATUSCD = 'TERMINATED' AND DESIGNATIONCD='AGAMC' ;
SELECT *  FROM [PROJECT].[dbo].[COM_APPLICANT_SMS_COMMUNICATION] order by COMMUNICATIONID desc;


  select * from [dbo].[OBD_BM_DETAILS] order by 1 desc;

  update OBD_BM_DETAILS set STRUSERNAME ='vivek'  where NBMSEQ = 30495;

  select * from [dbo].[OBD_REVP_DETAILS] order by 1 desc;

  update OBD_REVP_DETAILS set STRUSERNAME ='am'  where NREVPSEQ = 30493;




--------------------onboarding------------------
select * from obd_fee_staging order by 1 desc

update obd_fee_staging set strappno='AP007012', STRUPDATESTATUS='NO' where nid=55340

select * from [dbo].[CMS_BATCH_LOGGING]

update [CMS_BATCH_LOGGING] set batchstartflag='Y' where batchid=2

select * from [dbo].[CMS_BATCH_SCHEDULE_M]

update [CMS_BATCH_SCHEDULE_M] set dtbusiness='2021-07-30',batchflag='Y'

Change dtbusiness on today’s date as above(2021-08-05) format.


select * from BKP_CMS_PRODUCERCHANNEL_M_253 where PRODUCERSTATUSCD = 'TERMINATED';



select * from [dbo].[dcf_intermediary_data] where TRANSID='AP007201'




use MDM_COMPANY;

select * from OBD_fee_staging where STRAPPNO IN('AP007600 ')
select * from DBO_FEE_RECEIPTING  where STRAPPNO IN ('AP007597  ')
select * from [dbo].[CMS_FEE_PAYABLE_PRL]  where  LEADID IN ('AP007597 ')
select NTXNSTATUS,STRSCREENREFNO,* from DCF_PG_TRANSACTION where STRAPPNO IN('AP007576') 


select * from obd_fee_staging order by 1 desc
update obd_fee_staging set strappno='AP007624', STRUPDATESTATUS='NO' where nid=55340
select * from [dbo].[CMS_BATCH_LOGGING]
update [CMS_BATCH_LOGGING] set batchstartflag='Y' where batchid=2
select * from [dbo].[CMS_BATCH_SCHEDULE_M]
update [CMS_BATCH_SCHEDULE_M] set dtbusiness='2021-12-07',batchflag='Y'

select BUSINESSDT from BSS_BUSINESSDT_M
update [BSS_BUSINESSDT_M] set BUSINESSDT='2021-12-07'

select * from vw_basic_details where producersourcecd in (
select producersourcecd from cms_producerchannel_m where designationcd in('PAAMC','PAPOS') and producersourcecd is not null )

select * from [DCF_INTERMEDIARY_DATA] where transid = 'AP007590';
DELETE FROM [DCF_INTERMEDIARY_DATA]  WHERE transid = 'AP007608';
select * from com_client_m where clientseq='2197477'

select NDOCID from dbo.dcf_docupload_dtls where ACTIVESTATUS =1 and STRFUNCTIONID= 'AP007609' and 
STRDOCNAME = 'Bank Document';

delete from dbo.dcf_docupload_dtls where  ACTIVESTATUS =1 and NDOCID = 265813; 

delete from dbo.dcf_docupload_dtls where  ACTIVESTATUS =1 and STRFUNCTIONID= 'AP007609'     NDOCID = 265724; 

select * from dbo.dcf_docupload_dtls where STRFUNCTIONID= 'AP007609'

select * from dbo.dcf_docupload_dtls where  NDOCID = 265819; 




this.messageService.confirm.subscribe((e)=>{
      if(this.endorsementStatus === 'CPA'){
        this.endorsementStatus = '';
        this.router.navigate(['/agentListing'])
      }
    });

C:\workspace\angular5\src\app\product\common\directives\mask-number.directive.ts



   // let element: HTMLElement = document.getElementsByClassName("alert-confirm")[0] as HTMLElement;
              // element.onclick= ()=>{
              //  alert('called')
              // }

isEditAllowed(screenId: string) {
    return this.agmService.canEditScreen(screenId) && !this.agmService.isViewMode();;
  }
canEditScreen(screenId: string) {
    if(screenId == '4'){
       debugger;
    }
    let tempSections = this.masterService.getObject('agentMaintenanceEditSections');

    let canEdit = true;

    for (var section in tempSections) {
      if (tempSections.hasOwnProperty(section)) {
        if (tempSections[section].val == screenId) {
          canEdit = tempSections[section].canEditFlag;
        }
      }
    }

    return canEdit;
  }


 isViewMode() {
    return this.fetchDataManipulationMode() == configuration.accessMode.view;
  }

fetchDataManipulationMode() {
    let currentMode = this.storageService.getObject('agentAccessMode');

    return currentMode != null && currentMode != undefined && currentMode != '' ? currentMode : configuration.accessMode.view;
  }


<button mz-button id="btnPersonalEndorsement" class="btn btn-orange" 
*ngIf="isEditAllowed(agentMaintenanceEditSections.personalSection.val) && !isEditActive(agentMaintenanceEditSections.personalSection.val)"
[disabled]="disableEdit(agentMaintenanceEditSections.personalSection.val)" (click)="triggerEdit($event, agentMaintenanceEditSections.personalSection.val)">
       
*ngIf="isEditAllowed(agentMaintenanceEditSections.addressSection.val) && !isEditActive(agentMaintenanceEditSections.addressSection.val)"
[disabled]="disableEdit(agentMaintenanceEditSections.addressSection.val)" (click)="triggerEdit($event, agentMaintenanceEditSections.addressSection.val)">
               
 *ngIf="isEditAllowed(agentMaintenanceEditSections.contactSection.val) && !isEditActive(agentMaintenanceEditSections.contactSection.val)"
[disabled]="disableEdit(agentMaintenanceEditSections.contactSection.val) || IsContactvisible" (click)="triggerEdit($event, agentMaintenanceEditSections.contactSection.val)">
                  
*ngIf="isEditAllowed(agentMaintenanceEditSections.emergencyContactSection.val) && !isEditActive(agentMaintenanceEditSections.emergencyContactSection.val)"
[disabled]="disableEdit(agentMaintenanceEditSections.emergencyContactSection.val)" (click)="triggerEdit($event, agentMaintenanceEditSections.emergencyContactSection.val)">

-----------------
*ngIf="isEditAllowed(agentMaintenanceEditSections.bankSection.val) && !isEditActive(agentMaintenanceEditSections.bankSection.val)"
[disabled]="disableEdit(agentMaintenanceEditSections.bankSection.val)" (click)="triggerEdit($event, agentMaintenanceEditSections.bankSection.val)">

------------------
*ngIf="isEditAllowed(agentMaintenanceEditSections.bankSection.val) && !isEditActive(agentMaintenanceEditSections.bankSection.val) && btnEdit"
        (click)="triggerEdit($event, agentMaintenanceEditSections.bankSection.val)">
        <i mz-icon [icon]="'edit'" [align]="'left'"></i>
        Edit
      </button>


 isEditAllowed(screenId: string) {
    console.log('screenId' + screenId);
    console.log('this.agmService.canEditScreen(screenId)' + this.agmService.canEditScreen(screenId));
    console.log('!this.agmService.isViewMode()' + !this.agmService.isViewMode());
    
    return this.agmService.canEditScreen(screenId) && !this.agmService.isViewMode();;
  }

  isApprovalRequired(screenId: string) {
    return this.agmService.isApprovalRequired(screenId);
  }


canEditScreen(screenId: string) {
    if(screenId == '4'){
       debugger;
    }
    let tempSections = this.masterService.getObject('agentMaintenanceEditSections');

    let canEdit = true;

    for (var section in tempSections) {
      if (tempSections.hasOwnProperty(section)) {
        if (tempSections[section].val == screenId) {
          canEdit = tempSections[section].canEditFlag;
        }
      }
    }

    return canEdit;
  }


  isViewMode() {
    return this.fetchDataManipulationMode() == configuration.accessMode.view;
  }


checkDocsUploded- document-upload-loader.component.ts

functionid = endorsementseq


this.setDocumentDetails(retData);
triggerEdit

agent-endo-listing.module.ts



endorsementSeq, docDetailsJsonList,categoryDocJsonList,docReq


input.endorsementType = configuration.agentMaintenanceEndorsementTypes.addressDetails;
input.categoryDocJson = docCategoryJson;


  let docCategoryJson = new DocCategoryDetails();
 docCategoryJson.moduleId = this.masterService.getObject('moduleMaster')[0].val;
        docCategoryJson.subModuleId = this.masterService.getObject('subModuleMaster')[0].val;
        docCategoryJson.strCategory = this.masterService.getObject('categoryMaster')[1].val;
        docCategoryJson.strSubCategory = this.masterService.getObject('subCategoryMaster')[1].val;
docReq











case this.agentMaintenanceEditSections.addressSection.val:
saveJson1.endorsementType = configuration.agentMaintenanceEndorsementTypes.addressDetails;

switch (screenId) {

            case this.agentMaintenanceEditSections.personalSection.val:
                this.personalSectionEditActive = true;
                this.addressSectionEditActive = false;
                this.contactSectionEditActive = false;
                this.emergencyContactSectionEditActive = false;                
                break;

            case this.agentMaintenanceEditSections.addressSection.val:
                this.personalSectionEditActive = false;
                this.addressSectionEditActive = true;
                this.contactSectionEditActive = false;
                this.emergencyContactSectionEditActive = false;                
                break;

            case this.agentMaintenanceEditSections.contactSection.val:
                this.personalSectionEditActive = false;
                this.addressSectionEditActive = false;
                this.contactSectionEditActive = true;
                this.emergencyContactSectionEditActive = false;                
                break;

            case this.agentMaintenanceEditSections.emergencyContactSection.val:
                this.personalSectionEditActive = false;
                this.addressSectionEditActive = false;
                this.contactSectionEditActive = true;
                this.emergencyContactSectionEditActive = true;                
                break;
        }









60438211

getAgentJsonCompare

getDocumentListForUploading


stage, status remove in scrutinity
http://localhost:4200/#/applicantListing
processing page


hireracy/ individual movent/ listing, processing..

agent name,
supervisor name - more filter








isWithdrawal -false -true-true

isWithdrawal -false -false-false


isWithdrawal -false -false-true


[ngClass]="{
                  'disabledCtrl': this.disableAllFields,
                  'rejected-doc': this.controlDetails.documentDetails.status == '-1',
                  'blue-doc': this.controlDetails.documentDetails.status != '-1',
                  'disabled': controlDetails.documentDetails.docTypeMap.documentTypeMaster.val == 'Agreement' && this.movementDocs === true
                }"

 

onCloseSignatureCropper


size: 85444

other

tideagency paamc

fresh tideagency  agaamc 

async readThis

C/o Sai Damodara Consultancy Opp Chainkyapuri

http://localhost:4200/#/documentView/ENCa9fb397379cdfb85b0ed97886925aab513fc9120eac4e465a532205f2f4c40ce09d906503ed905042e2027ef23a0b4b7773e6f877527ee378f517f9893fae060

upload-file.component.ts  async fileChange($event)

document-upload-loader.component.html   document-upload-loader.component.ts ngx-document-upload-loader
getDocumentsJson

document-control-row.component.html    document-control-row.component.ts   ngx-document-control-row fileChange
MOV9703 60399186    @Input() inputJsonForDocs: any;
[movementDocs]='isMovementDocs'

main --- export class DocumentUploadComponent implements OnInit
this.inputJsonForDocs.strSubCategory5: "MOVEMENT"

6189--merging
1611-line

AP006818
bx6
fileSrc   -docName
139-line
85-line
292


[ngClass]="[(document.controls.status.value == '1' || 
document.controls.status.value == '2') ? disabledCtrl : '', 
(document.controls.docName.value == 'Advisor Declaration form' || 
document.controls.docName.value == 'Agreement' || 
document.controls.docName.value == 'POS Declaration Form') ? 'disabled disablePointer' : '']"


[ngClass]="{ 'disabledCtrl': this.disableAssesmentLink || isReOnboardingFC}"

reqActionId: "1"
----------------------
AP006820 working
-----------------
updateBMdetails
http://10.28.18.24:8680/ExideLife/uploadDwnload/getDocRequiredByCategory/MOV9719
60308661  MOV9710
60436536
.cropper_height[_ngcontent-c42] {
    max-height: 520px !important;
    top: 22px;
    overflow: hidden !important;
}


 if(quest.questionDetails.qnDescription == "Occupation"){
              if( this.dtOfBirth < 50){
              if((quest.questionDetails.qnAnswer) == "Retired"){
                quest.questionDetails.subQnList.forEach(
                  subQust => { 
                    if(subQust.questionDetails.qnNumber == "5 a)" && subQust.questionDetails.qnAnswer == "No"){
                      quest.questionDetails.qnOptions.forEach(
                        subquest => {
                          if(subquest.optionDesc == "Retired"){
                            subquest.optionScore = subquest.optionFraudScore;
                          }
  
                        }
                      );
                    }
                  }
                );
              }
             } else{
                if((quest.questionDetails.qnAnswer) == "Retired"){
                 quest.questionDetails.subQnList.forEach(
                   subQust => { 
                     if(subQust.questionDetails.qnNumber == "5 a)"){
                             subQust.questionDetails.qnAnswer = "No";
                          }
                      }
                  );
                }
            }
            if((quest.questionDetails.qnAnswer) == "Business/Self Employed"){
              quest.questionDetails.subQnList.forEach(
                subQust => {
                  if(subQust.questionDetails.qnNumber == "5 a)" && subQust.questionDetails.qnAnswer == "No"){
                    quest.questionDetails.qnOptions.forEach(
                      subquest => {
                        if(subquest.optionDesc == "Business/Self Employed"){
                          subquest.optionScore = subquest.optionFraudScore;
                        }
  
                        }
                      );
                    }
                  }
                );
              }
  
            }

=====================

1847

parentQuestion.questOptions.forEach((ele)=>{
                          if(parentQuestion.answer === ele.optionDesc){
                            if(this.dtOfBirth < 50 && parentQuestion.answer == "Retired"){
                            if(childAnswer === 'Yes'){
                              console.log('first block');
                              each.optionScore= ele.qscore;
                            }
                            else{
                              each.optionScore= ele.fraudscore;
                              console.log('first else block');
                            }
                          }
                          else{
                            console.log('second else block');
                            each.optionScore= ele.qscore;
                          }
                          }

// ---------------------CMS6189 Begin -----------------------------//
// ---------------------CMS6189 End -----------------------------//

parQuestId-parentQnId

Pending Scrutiny

qnDescription: "Gender"
qnDocDetails: QuestionDocDetail {qnDocId: 0, parentQnId: 0, isMandatory: false, optionId: 0}
qnName: "OBPFQ003"
qnNumber: "3"
6 -Application No : AP006807

Occupation

0: {optionId: 242, quesNumbers: "1", optionDesc: "< 2 LPA", qscore: 0, fraudscore: 0, subQuestionId: null,…}
1: {optionId: 245, quesNumbers: "1.1", optionDesc: "2 – 5 LPA", qscore: 1, fraudscore: 0,…}
2: {optionId: 247, quesNumbers: "1.4", optionDesc: "> 5 LPA", qscore: 2, fraudscore: 0,…}
3: {optionId: 243, quesNumbers: "1.3", optionDesc: "2 Wheeler", qscore: 1, fraudscore: 0,…}
4: {optionId: 244, quesNumbers: "1.6", optionDesc: "4 Wheeler", qscore: 2, fraudscore: 0,…}

Income

questOptions: [{optionId: 237, quesNumbers: "1", optionDesc: "Employed/Service", qscore: 1, fraudscore: 1,…},…]
0: {optionId: 237, quesNumbers: "1", optionDesc: "Employed/Service", qscore: 1, fraudscore: 1,…}
1: {optionId: 238, quesNumbers: "1.1", optionDesc: "Unemployed", qscore: 1, fraudscore: 1,…}
2: {optionId: 239, quesNumbers: "1.2", optionDesc: "Business/Self Employed", qscore: 2, fraudscore: 1,…}
3: {optionId: 240, quesNumbers: "1.3", optionDesc: "Housewife", qscore: 1, fraudscore: 1,…}
4: {optionId: 241, quesNumbers: "1.4", optionDesc: "Retired", qscore: 3, fraudscore: 2,…}


 //for Occupation question
              // if(el.questionDetails.qnDescription =="Occupation"){
              //   if(el.questionDetails.qnAnswer === 'Business/Self Employed' || el.questionDetails.qnAnswer === 'Retired'){
              //     el.questionDetails.qnOptions.forEach(option=>{
              //       if(el.questionDetails.qnAnswer === option.optionDesc){
              //         parentQnOptionId = option.qnOptionId;
              //           var subQuestion = el.questionDetails.subQnList.filter(item =>{
              //             if(item.questionDetails.parentOptionId === parentQnOptionId){
              //               return item;
              //             }
              //           })
              //           el.questionDetails.subQnList = subQuestion;
              //       }
              //     })
              //   }
              //   else{
              //     el.questionDetails.subQnList = [];
              //   }
              // }

incoe-2l
sub no-

childAnswer: "Yes"
eventVal: ""
fraudscore: 0
groupquestid: 22
optionScore: 0
parentQnId: 198
questionId: 216

sub yes


eventVal: "Business/Self Employed"
groupquestid: 22
optionScore: 1
questionId: 198




childAnswer: "> 5 LPA"
eventVal: ""
fraudscore: 0
groupquestid: 22
optionScore: 2
parentQnId: 0
questionId: 199
subQnList: (5) [ControlDataDetail, ControlDataDetail, ControlDataDetail, ControlDataDetail, ControlDataDetail]
__proto__: Object
score0parentquestId199grupquestId22



 <div class="row" [hidden]="docApplicantView" *ngIf="displayClientSubmit && !configurationSettings.otpValidationCheck && !showToggleBtn">
                    <div class="col-md-12 text-center">

                      <button class="btn btn-orange" id="btnSubmit" style="padding:0 1.5rem;margin-top:10px;" (click)="callDraftSave()">
                        <i class="fa_save-lead"></i>Submit
                      </button>

                    </div>
                  </div>




      // if(this.tempQuesData && this.tempQuesData.length>0){
            //   this.setparentQuestionScore(questionOptionObj);
            // }


Employed/Service

  //Score setting based on selected child Question
  setparentQuestionScore(data) {
    var childAnswer = data.childAnswer;
    this.incomeObj={};
    this.tempQuesData.forEach(
      question => {
        if(question.quesDesc == "Income"){
          question.questOptions.forEach((ele)=>{
            if(question.answer == ele.optionDesc){
              let obj = {
                groupquestid :question.igroupquestid,
                eventVal:question.answer,
                optionScore: childAnswer == 'Yes' ? ele.qscore : ele.fraudscore,
                questionId: question.questionId,
                childAnswer:null,
                parentQnId:question.parentQnId,
                subQnList:question.questReferenceMapping
              }
              this.incomeObj = JSON.parse(JSON.stringify(obj));
            }
          })
        }
    })
  }


this.test = _.merge({}, this.someService.test)
this.test = JSON.parse(JSON.stringify(this.someService.test));
let copy = Object.assign({}, myObject)



business/ self employed 

http://10.28.18.24:8680/ExideLife/exidelifeInterface/getDesignation/AGAMC
----------------
Application No : AP006775


processInstanceId

 if(this.isAutoGeneratedFiles){
        this.showToggleBtn = true; //showing toggle sms button
      }
      else{
        this.showToggleBtn = false; // calling normal flow sms button
      }


___________________________
Activate , Deactive..

create 
onboarding -- scrutinity.

ADUser
agent id , agent name 

agent number 
632
8dight, number,
----------------------------





photo / sign/


if applicatintType 1& aplicant type 2& agfa =>questions 


fetchUploadedDocsById(inputData: any, docKey:any) {
    let httpObj = new HttpModel(
      configuration.partialURLs.fetchDocsById + inputData.transId + '/'+docKey, //'/465',
      null,
      configuration.callType.GET
    );

    return this.httpService.invokeHttp(httpObj);
  } 


AP006758
applicantId: "AP002443"
-------------------------------UAT---------------------------------------
03-11-1949 - AP006363 - AISPV1683J
AP006367


B8X - Guwahati 2 FC   PAAMC

AP006364  AAYPE7279D  02-12-1948 FPAMC no sms link 



others FPAMC  -- No sms link
 
others PAAMC

fresh AGAMC, FAAMC
other 


npm run-script build --aot --outputHashing=all

life@1234
surdhan 12 SM
UAYmohankumar6 BM
Abjeet HO












questType: 1  input
questType: 2 select



B8X branch - FPAMC
1.7.7

UAT Credentials
          URL - https://gateway2.exidelife.in/cms/#/prelogin
          UserName – uatjsudharsan12
          Password - change@1234
node --max_old_space_size=5048 node_modules/@angular/cli/bin/ng build --prod --aot --outputHashing=all

UAT Credentials
          URL - https://gateway2.exidelife.in/cms/#/prelogin
          UserName – uatjsudharsan12
          Password - change@1234

   


Hi vivek,

Kindly refer the below details for the uat site.

ADMIN
URL : http://10.28.15.19:8080/training-portal/admin/login
Username : uatpreethis1
Password : exide@123E

Student 
URL : http://10.28.15.19:8080/training-portal/student/login
Username: URN13579
Password: URN13579



-------------------------------------production---------------------------------
          You need to create a build two times.
1.      215 server
2.      217 server

In src\environments\environment.prod.ts 

           

136 code === 215 server
139 code === 217 server 

node --max_old_space_size=5048 node_modules/@angular/cli/bin/ng build --prod --aot --outputHashing=all

PRODUCTION  Credentials
https://mycms.exidelife.in/cms/#/prelogin

username: santoshd4
password: wsxqaz@2

---------------------------------------------------------------------------------------------------------------







// ------------CR-6239 Begin-----------------
// ------------CR-6239 END-----------------
uat

normal flow - AP005265 
AP005333

//bm
stage: "STG11"
status: "STA12"

stage: "STG03"
status: "STA08"


MOV9545
agentCategory: "AGAMC" new category "fcamc"
agentCode: "60238107"
agentName: "EFGHIJKLMNOPQRSTUV ABCDEFG"
agentStatus: "ACTIVE"
agentTitle: "Senior Advisor"
appNumber: "31758498"
channelCD: "TIEDAGENCY"
channelName: "TIED AGENCY"
emailId: ""
mobileNo: "5505081808"
movementDate: "2021-05-13"
movementStage: "PENDING PROMOTION"
movementStatus: "PENDINGMOVINFO"
movementStatusDesc: "Pending Movement Info"
movementType: "PROMOTION"
noOfRemarks: 0
parentAgencyCode: "BS3"
parentEntityName: "Chennai 18 FC"
supervisorCode: "60273125"
supervisorDesgn: "LCAMC"
supervisorName: "EFGHIJKLMNOPQRSTUVWX IJKLMN"
transId: "MOV9545"


      //Disable Assesment Link
      this.designations.forEach((element) =>{
        if(eventVal == element.designationCd && (element.isExternal || element.isCabrBanca)){
          this.disableAssesmentLink = true;
        }
        else if(eventVal == element.designationCd && (!element.isExternal && !element.isCabrBanca)){
          this.disableAssesmentLink = false;
        }
      });



  partialServiceURL: "http://10.28.29.44:8080/" //jaisey

processInstanceId: existProcessInstanceId == undefined ? '' : existProcessInstanceId,
isSpecifiedPerson: isSpecifiedPerson ? 'YES' : 'NO',


1325
-1433-1484
1509-normal flo
 this.documentUploadService.reUploadDocument 1461

ag||fa 
f*


if(this.movementDetails != null && movent type == promtion){
      this.getQuestScore();  
    }
else{
}

 encodedDraftSaveDocs: '/onBoarding/verifyUrlForDocument/',
    deactivateDocumentURL:'/onBoarding/deactivateDocumentURL/',


abcd

http://localhost:4200/#/documentView/ENCd79103f12190fb6a4fbcac1206decfd177cbcdf6a813edae3d24db3fe9156d1c62282f734a62d6cba83b7afeb5799f7fd6966a58fb0fbb2c62965ae3007e4ef9
http://localhost:4200/#/documentView/ENC85cc5d1a4f950a2521ac65f745a1acd62f99607061cd764e96b631c9a132074bc942e4115759fe55cc68915df897c424fc0c7ac9af42bd624185f13c3c30c2cd
http://localhost:4200/#/documentView/ENCb40142013a6bbea0103c1a296acde9fcccc1d586b33aa2665c3bf5d0416b54c3d129b2e2f14053fe6f604fecc6b51c03b3bb166076f5070021a3643af0a2688c
  
deactivateDocumentURLRes
this.commonService.emitTotalScores.emit({
          totalInitiatorQuestionSore: this.totalInitiatorQuestionSore,
          totalBMScoreQuestionGroupSore: this.totalBMScoreQuestionGroupSore,
          totalBMDeclarationSore: this.totalBMDeclarationSore,
          totalProfileQuestionSore : this.totalProfileQuestionSore
        });

 this.commonService.emitTotalScores.subscribe(
      val => {
        //this.questionSore = val.finalScore;
          this.totalProfileQuestionSore = val.totalProfileQuestionSore,
          this.totalInitiatorQuestionSore = val.totalInitiatorQuestionSore,
          this.totalBMScoreQuestionGroupSore = val.totalBMScoreQuestionGroupSore,
          this.totalBMDeclarationSore = val.totalBMDeclarationSore
    });



sta
mobile number..

sign = pos,agreent

ApplicantViewComponent
assessment-office-use.component.ts
app.routing.ts

resultData.pageId="STG07"


line-1071
2803917 | 
2097152
AP006687

https://mycms.exidelife.in/cms/#/endorsementListing

http://localhost:4200/#/individualMovementScrutiny
pending AMC APPROVAL, PEN BRANCH MNG APPROVAL, PEN REV/AREA MNG APPROVAL

Movement type, movement code, movement status, agent code   

phtho rej- adf
457

617

validateForm

this.isQuestionDeclared = true;

docDeclarationTemplate

individualDocDeclaration(event){
  const controlArray = <FormArray>this.myForm.get('documents');
  controlArray.controls.forEach(function(ele) {
   if(ele.value.docTypeCd =="POS" || ele.value.docTypeCd =="DA" || ele.value.docTypeCd =="AC"){
    
   }
});
}

 if(this.editFlow &&(controlArray.controls[index].value.docName == "Photograph")|| (controlArray.controls[index].value.docName == "Signature")){
      this.downloadDeclarationTemplateValue = "downloadDeclarationTemplate";
      this.downloadAgreementTemplateValue = "downloadAgreementTemplate";
      this.downloadPOSDeclarationTemplateValue = "downloadPOSDeclarationTemplate";
    }

editFlow

if((controls[i].docName == "Photograph"|| controls[i].docName == "Signature") && controls[i].fileName == ''){
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          flag = false;
        } else {
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'none';
        }


AP005939
 let masterDocs

1092

  let filteredDoc = filterOnKeyAndFlag.filter(

controlArray.controls[10].value.fileSrc

 this.downloadDeclarationTemplateValue = "downloadDeclarationTemplate";
        this.downloadAgreementTemplateValue = "downloadAgreementTemplate";
        this.downloadPOSDeclarationTemplateValue = "downloadPOSDeclarationTemplate";

validateForm

const controlArray = <FormArray>this.myForm.get('documents');
 var controls = this.myForm.value.documents;

if ((controlArray.controls[index].value.docName == "Photograph")

 if (element.docTypeMap.documentTypeMaster.label == "Advisor Declaration form") {
          phto this.downloadDeclarationTemplateValue = "downloadDeclarationTemplate";
        }
        if (element.docTypeMap.documentTypeMaster.label == "Agreement") {
           this.downloadAgreementTemplateValue = "downloadAgreementTemplate";
        }
        if (element.docTypeMap.documentTypeMaster.label == "POS Declaration Form") {
          this.downloadPOSDeclarationTemplateValue = "downloadPOSDeclarationTemplate";
        }


AP005742


http://10.28.18.24:8680/ExideLife/docUpload/updateUploadedStatus/
Agreement-R
Bank Document-A
Address Proof-R
Aadhaar Proof-A
Identity Proof- R

206
0: {docIndex: 0, docTypeCd: "", docName: "Photograph", version: "", remarks: "", …}
1: {docIndex: 1, docTypeCd: "SI", docName: "Signature", version: "", remarks: "", …}
2: {docIndex: 2, docTypeCd: "PN", docName: "Identity Proof", version: "", remarks: "", …}
3: {docIndex: 3, docTypeCd: "", docName: "Education Proof", version: "", remarks: "", …}
4: {docIndex: 4, docTypeCd: "", docName: "Address Proof", version: "", remarks: "", …}
5: {docIndex: 5, docTypeCd: "DA", docName: "Advisor Declaration form", version: "", remarks: "", …}
6: {docIndex: 6, docTypeCd: "", docName: "Bank Document", version: "", remarks: "", …}
7: {docIndex: 7, docTypeCd: "AC", docName: "Agreement", version: "", remarks: "", …}
8: {docIndex: 8, docTypeCd: "POS", docName: "POS Declaration Form", version: "", remarks: "", …}



.cropper-modal {
    background-color: #00000047;
    opacity: .5;
}




 <div class="btn"  [ngClass]="[document.controls.status.value == -1 ? 'rejected-doc' : '', document.controls.status.value != -1 ? 'blue-doc' : '', (document.controls.docName.value == 'Advisor Declaration form' || document.controls.docName.value == 'Agreement' || document.controls.docName.value == 'POS Declaration Form') ? 'disabled disablePointer' : '']">
                                <i class="glyphicon glyphicon-upload" aria-hidden="true"></i>
                                <input type="file"   (click)="resetInput($event)" (change)="fileChange($event,i)" id="fileUL_{{i}}">
                              </div>

[ngClass]="[document.controls.status.value == -1 ? 'rejected-doc' : '', document.controls.status.value != -1 ? 'blue-doc' : '', (document.controls.docName.value == 'Advisor Declaration form' || document.controls.docName.value == 'Agreement') ? 'disabled disablePointer' : '']"

<input  id="txtFile_{{i}}" class="file-path validate" [ngClass]="{'mandatoryField': document.controls.isMandatory.value == 1, 'disablePointer':document.controls.docName.value == 'Advisor Declaration form'}"
                                  type="text" [disabled]="document.controls.status.value == 1 || document.controls.status.value == 2"
                                  placeholder="Upload files" formControlName="fileName">



[ngClass]="[(document.controls.isMandatory.value == 1) ? mandatoryField : '', (document.controls.docName.value == 'Advisor Declaration form' || document.controls.docName.value == 'Agreement' || document.controls.docName.value == 'POS Declaration Form') ? 'disabled disablePointer' : '']"
                                
[(document.controls.isMandatory.value == 1) ? mandatoryField : '', (document.controls.docName.value == 'Advisor Declaration form' || document.controls.docName.value == 'Agreement' || document.controls.docName.value == 'POS Declaration Form') ? 'disabled disablePointer' : '']"
                               


86,167
POS Declaration Form
deleteFile(index) {
    const controlArray = <FormArray>this.myForm.get('documents');
    if((controlArray.value[index].docName != "Advisor Declaration form") || (controlArray.value[index].docName != "Advisor Declaration form") ||
     (controlArray.value[index].docName != "Agreement")){
      controlArray.controls[index].get('fileName').setValue('');
      controlArray.controls[index].get('fileSize').setValue('');
      controlArray.controls[index].get('fileType').setValue('');
      controlArray.controls[index].get('fileExtension').setValue('');
      controlArray.controls[index].get('fileSrc').setValue('');
    }
  }

fileChange

if((controlArray.value[index].docName != "Advisor Declaration form") || (controlArray.value[index].docName != "Advisor Declaration form") ||
      (controlArray.value[index].docName != "Agreement")){


docTypeCd: "AC", docName: "Agreement"

accept="image/jpg, image/jpeg"

                              [attr.disabled]="document.controls.docName.value == 'Advisor Declaration form'"
                              [ngClass]="{'disablePointer':document.controls.docName.value == 'Advisor Declaration form'}"



async fileChange
this.CropedImagePhoto

 fileAccept(doc) {
    let value;
    if ((doc == "Photograph") || (doc == "Signature")) {
      value = 'image/jpg, image/jpeg';
    } else {
      value = "";
    }
    return value;
  }
[attr.accept]="fileAccept(document.controls.docName.value)"

accept="image/jpg, image/jpeg"

  

deleteFile(index) {

   validateForm() {
    var flag = true;
    var controls = this.myForm.value.documents;
    for (var i = 0; i < controls.length; i++) {
      if (controls[i].isMandatory) {
        if (controls[i].docName == "Others" && controls[i].otherDocName == '') {
          (<HTMLInputElement>document.getElementById('errorquesDocName' + controls[i].docIndex)).style.display = 'block';
          flag = false;
        } else if (controls[i].docName == "Others" && controls[i].otherDocName != '') {
          (<HTMLInputElement>document.getElementById('errorquesDocName' + controls[i].docIndex)).style.display = 'none';
        }
        if (controls[i].docTypeCd == '') {
          (<HTMLInputElement>document.getElementById('errorquesDocType' + controls[i].docIndex)).style.display = 'block';
          flag = false;
        } else {
          (<HTMLInputElement>document.getElementById('errorquesDocType' + controls[i].docIndex)).style.display = 'none';
        }
        if (controls[i].fileSrc == '') {
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          flag = false;
        } else {
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'none';
        }
         if((controls[i].docName == "Photograph"|| controls[i].docName == "Signature") && controls[i].fileName == ''){
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          flag = false;
        } else {
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'none';
        }

      }

      if (controls[i].status == -1 && controls[i].fileName != '') {
        flag = false;
        (<HTMLInputElement>document.getElementById('reup' + controls[i].docIndex)).style.display = 'block';
      } else {
        (<HTMLInputElement>document.getElementById('reup' + controls[i].docIndex)).style.display = 'none';
      }
      //Check if Non Mandatory DocType is Not selected if File uploaded
      if (controls[i].isMandatory) {
        if(!controls[i].docTypeCd && controls[i].fileSrc != ''){
          (<HTMLInputElement>document.getElementById('errorSelectDocType' + controls[i].docIndex)).style.display = 'block';
          (<HTMLInputElement>document.getElementById('txtFile_' + controls[i].docIndex)).className ="mandatoryField";
          flag = false;
        }        
        if((controls[i].docName == "Marital Proof") && ((this.maritalValue == "Married") || (this.maritalValue == "Divorced")) && controls[i].fileName == ''){
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          flag = false;
        }
        if((controls[i].docName == "Vehicle Proof") && ((this.incomeValue == "2 – 5 LPA or has 2 Wheeler") || (this.incomeValue == "5 LPA or has 4 Wheeler") || (this.incomeValue == "Has 4 Wheeler") || (this.incomeValue == "Has 2 Wheeler")) && controls[i].fileName == ''){
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          flag = false;
        } 
        if((controls[i].docName == "Occupation Proof") && ((this.occupationValue == "Business/Self Employed") || (this.occupationValue == "Employed")) && controls[i].fileName == ''){
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          flag = false;
        }
        if((controls[i].docName == "Income Proof") && ((this.occupationValue == "Business/Self Employed") || (this.occupationValue == "Employed")) && controls[i].fileName == ''){
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          flag = false;
        }
       }
    }
    if (this.courierDetailsRequired && this.courierForm.invalid) {
      flag = false;
      alert(this.screenMsg.documentDetails.errors.courierDetails);
    }
    return flag;
  }

advisorFormClose

advisorFormClose(){
    const controlArray  = <FormArray>this.myForm.get('documents');
    controlArray.controls.find(function(value){
      return value.value.docName  == "Photograph";
     });
   }

AP005920
60409860
60271136

MOV9275
MOV9278
MOV9317
MOV9318
MOV9319
MOV9323


async advisorFormConfirm
docName: "Photograph"
docName: "Signature"
load-file



 <span class="dload-file">
                              <div class="file-field input-field">
                                <div class="btn blue-doc">
                                  <a target="_blank" [ngClass]="document.controls.fileName.value == '' ? 'not-active':'' " class="down-icon" (click)="downloadDoc(
																		document.controls.fileSrc.value,
																		document.controls.fileName.value,
																		document.controls.externalUrl.value
																		)"
                                    download="{{document.controls.fileName.value}}" style="transform: scaleX(1) scaleY(1) translateX(0px) translateY(0px); opacity: 1;">
                                    <i class="glyphicon glyphicon-download" aria-hidden="true"></i>
                                  </a>
                                </div>
                              </div>

                            </span>



 <a target="_blank" [ngClass]="document.controls.fileName.value == '' ? 'not-active':'' " class="down-icon" (click)="downloadDoc(
																		document.controls.fileSrc.value,
																		document.controls.fileName.value,
																		document.controls.externalUrl.value
																		)"
                                    download="{{document.controls.fileName.value}}" style="transform: scaleX(1) scaleY(1) translateX(0px) translateY(0px); opacity: 1;">
                                    <i class="glyphicon glyphicon-download" aria-hidden="true"></i>
                                  </a>




controlArray.value[5].docName


	// find signature
			const signature = this.signatureResultImg; // Base64
			controlArray.controls.find(function(value){
				return value.value.docName == "Signature";
			});
	
			// find Signature Index
			const signatureIndex = controlArray.controls.map(function (value) { return value.value.docName; }).indexOf("Signature");
	
			// Get Cropped Data & Set to Signature Input
			const signatureBlob = this.dataURItoBlob(this.signatureResultImg); // blob
			const signatureBlobFile = new File([signatureBlob], 'signature.jpg', {
				type: signatureBlob.type
			});
			// const signatureFormData = new FormData();
			// signatureFormData.append('signature', signatureBlob);
			// Send Signature to server
				await this.setCropedFileChangeData(signatureBlobFile, signatureIndex, controlArray, fileSize, 'Signature');







 async fileChange($event, index) {
    this.currentFileChangeEvent = $event;
    this.currentFileIndex = index;
    // this.imageChangedEvent = event;
    // this.imageData = "";
    // this.imageData.cropper("destroy");
    const controlArray = <FormArray>this.myForm.get('documents');

   // if selected document is Advisor Form then open crop window
    if (controlArray.controls[index].value.docName == "Advisor Declaration form") {
      //if selected document is of JPEG and JPG format then only allow in this loop.
      if (($event.srcElement.files[0].type) != "image/jpeg" && ($event.srcElement.files[0].type) != "image/jpg" && ($event.srcElement.files[0].type) != "application/pdf" && ($event.srcElement.files[0].type) != "image/tiff") {
        alert("Please upload the file of only JPG and JEPG format");
      } else if (($event.srcElement.files[0].type) == "application/pdf") {

        // this.CropedImagePhoto.nativeElement.
        // this.imageData = $event.target.result;
        if ($event.target.files && $event.target.files[0]) {
          const reader = new FileReader();

          await reader.readAsDataURL($event.target.files[0]); // read file as data url

          // tslint:disable-next-line:no-shadowed-variable
          reader.onload = ($event) => { // called once readAsDataURL is completed
            if (!this.imageData) {
              this.imageData = '';
              this.pdfConvert($event);
            } else {
              // const imageData = (<FileReader>$event.target).result;
              // this.signatureCropData.replace(imageData);
              if (this.signatureCropped != null) {
                this.signatureCropped.destroy();
              }
              this.signatureCropped = null;
              // this.photoCroppedData.replace(imageData);
              if (this.photoCropped != null) {
                this.photoCropped.destroy();
              }
              this.photoCropped = null;
              this.imageData = '';
              this.pdfConvert($event);
            }
            this.checkTypeOfForm = true;
            jQuery('.cropper-container.cropper-bg').remove();  
            this.CropedModalWindow.open();
            this.imageData = '';
         //   this.CropedModalWindow(clearImmediate);
          };
        }
      } else if (($event.srcElement.files[0].type) == "image/jpeg" || ($event.srcElement.files[0].type) == "image/jpg" || ($event.srcElement.files[0].type) =="image/tiff") {
        if ($event.target.files && $event.target.files[0]) {
          const reader = new FileReader();

        await reader.readAsDataURL($event.target.files[0]); // read file as data url

          // tslint:disable-next-line:no-shadowed-variable
          reader.onload = ($event) => { // called once readAsDataURL is completed
            if (!this.imageData) {
              this.imageData = '';
              this.imageData = (<FileReader>$event.target).result;
            } else {
              // const imageData = (<FileReader>$event.target).result;
              // this.signatureCropData.replace(imageData);
              if (this.signatureCropped != null) {
                this.signatureCropped.destroy();
              }
              this.signatureCropped = null;
              // this.photoCroppedData.replace(imageData);
              if (this.photoCropped != null) {
                this.photoCropped.destroy();
              }
              this.photoCropped = null;
              this.imageData = (<FileReader>$event.target).result;
            }
             this.checkTypeOfForm = false;
             jQuery('.cropper-container.cropper-bg').remove();  
            this.CropedModalWindow.open();
          };
        }
      }

      // $('#CropedImagePhoto').attr('src', $event.target.result);
    } 
    else {
      this.setFileChangeData($event, index, controlArray);
    }
  }



<div class="btn" [ngClass]="document.controls.status.value == -1 ? 'rejected-doc' : 'blue-doc' ">
                                <i class="glyphicon glyphicon-upload" aria-hidden="true"></i>
                                <input type="file" (click)="resetInput($event)" (change)="fileChange($event,i)" id="fileUL_{{i}}" [disabled]="isFileUploadDisabled(document.controls.docName.value,document.controls.status.value)">
                              </div>

***************************************************
           uploading docs
**********************************************
selector: 'ngx-document-upload-loader',
@Input() afterComponentRefreshEmitter: EventEmitter<any> = null;

//emiting data 
this.documentUploadService.refreshComponentEmitter.subscribe

this.afterComponentRefreshEmitter.emit();
110-line

if (this.afterComponentRefreshEmitter != null && this.afterComponentRefreshEmitter != undefined) {
        this.afterComponentRefreshEmitter.emit();
}

****************************************
//uploading docs popup

<ngx-document-upload-loader [saveButtonRequired]=false [saveEmitter]='documentComponentSaveEmitter'
            [docsJson]='documentComponentDocsJson' [inputJsonForDocs]='documentComponentDocsInputJson' [functionId]='documentComponentFunctionId'
            [afterComponentRefreshEmitter]='documentComponentAfterRefreshEmitter'></ngx-document-upload-loader> 
        
documentComponentAfterRefreshEmitter: EventEmitter<any> = new EventEmitter<any>();

this.documentComponentAfterRefreshEmitter.subscribe(savedQnData => {
      if(!this.btnViewDifference){
        this.EndoDocumentModal.open();////////////open popup modal
      }
});


***************************************************
          saving  docs
**********************************************
import { DocumentUploadLoaderComponent } from '../../../../../documentUpload/childModules/documentUploadLoader/document-upload-loader.component';

@ViewChild(DocumentUploadLoaderComponent) documentUploadLoaderComponent: DocumentUploadLoaderComponent;
documentComponentSaveEmitter: EventEmitter<any> = new EventEmitter<any>();

 saveDocuments() {
    this.documentUploadLoaderComponent.saveDocs(this.documentComponentSaveEmitter);
  }
















movementDetails.transData.statusCode
"REVPAREAMPPROVAL"

movementDetails.transData.statusCode
"AMCAPPROVAL"


 selector: 'app-individual-details',

*ngIf="document.controls.docName.value != 'Advisor Declaration form'"

(personalInfo,agentSequence, addressInfo, contactInfo, mobileInfo, emailInfo, educationalInfo,agencyInfo, bankInfo, agentEmergencyContactDetails)


 if((controls[i].docName == "Marital Proof") && ((this.maritalValue == "Married") || (this.maritalValue == "Divorced")) && controls[i].fileName == ''){
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          (<HTMLInputElement>document.getElementById('txtFile_' + controls[i].docIndex)).className ="mandatoryField";
          (<HTMLInputElement>document.getElementById('ddlDocType_' + controls[i].docIndex)).className ="mandatoryField";
          flag = false;
        }
        if((controls[i].docName == "Vehicle Proof") && ((this.incomeValue == "2 – 5 LPA or has 2 Wheeler") || (this.incomeValue == "5 LPA or has 4 Wheeler") || (this.incomeValue == "Has 4 Wheeler") || (this.incomeValue == "Has 2 Wheeler")) && controls[i].fileName == ''){
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          (<HTMLInputElement>document.getElementById('txtFile_' + controls[i].docIndex)).className ="mandatoryField";
          (<HTMLInputElement>document.getElementById('ddlDocType_' + controls[i].docIndex)).className ="mandatoryField";
          flag = false;
        } 
        if((controls[i].docName == "Occupation Proof") && ((this.occupationValue == "Business/Self Employed") || (this.occupationValue == "Employed")) && controls[i].fileName == ''){
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          (<HTMLInputElement>document.getElementById('txtFile_' + controls[i].docIndex)).className ="mandatoryField";
          (<HTMLInputElement>document.getElementById('ddlDocType_' + controls[i].docIndex)).className ="mandatoryField";
          flag = false;
        }
        if((controls[i].docName == "Income Proof") && ((this.occupationValue == "Business/Self Employed") || (this.occupationValue == "Employed")) && controls[i].fileName == ''){
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          (<HTMLInputElement>document.getElementById('txtFile_' + controls[i].docIndex)).className ="mandatoryField";
          (<HTMLInputElement>document.getElementById('ddlDocType_' + controls[i].docIndex)).className ="mandatoryField";
          flag = false;
        }

this.fetchDocumentsAndCallInitDocument()


this.personalInfoForm.controls['income'].clearValidators();


this.questionData

endorsementHistorySeq
"272304"

afterSaveFlow

categoryDocJsonList: Array(3)
0: {categoryId: null, moduleId: 10, subModuleId: 101, strCategory: 1002, strSubCategory: 10002, …}
1: {categoryId: null, moduleId: 10, subModuleId: 101, strCategory: 1002, strSubCategory: 10002, …}
2: {categoryId: null, moduleId: 10, subModuleId: 101, strCategory: 1002, strSubCategory: 10002, …}
length: 3
__proto__: Array(0)
docDetailsJsonList: Array(1)
0: {hardCopy: false, docTypeMap: {…}, mandatory: true}
length: 1
__proto__: Array(0)
docMapId: ["482"]
docReq: true
endorsementSeq: "272289"
endorsementType: "ADDRESS DETAILS"
flag: false
jsonChangedString: Array(3)
0: "zipCode"
1: "line2"
2: "line1"
length: 3
__proto__: Array(0)
msg: "Please Upload Documents For Previous Changes"
returnFlag: false
status: false
__proto__: Object



------------------------

0:
docTypeMap:
documentMaster: Array(4)
0: {val: "YF", label: "Aadhaar Card Copy", documentTypeMapId: 479}
1: {val: "VC", label: "Voter ID", documentTypeMapId: 480}
2: {val: "DL", label: "Valid Driving License", documentTypeMapId: 481}
3: {val: "PP", label: "Valid Passport", documentTypeMapId: 482}
length: 4
__proto__: Array(0)
documentTypeMapId: 482
documentTypeMaster: {val: "Address Proof", label: "Address Proof", maxSize: null, documentListJson: null, maxSizeInKb: "2048"}
__proto__: Object
hardCopy: false
mandatory: true
__proto__: Object
length: 1
__proto__: Array(0)

----------------------------------

0:
categoryCode: null
categoryId: null
moduleId: 10
score: null
strCategory: 1002
strCategoryDescription: null
strSubCategory: 10002
strSubCategory1: 0
strSubCategory2: 0
strSubCategory3: "ADDRESS DETAILS"
strSubCategory4: "zipCode"
strSubCategory5: "zipCode"
subModuleId: 101
usedFlag: null
__proto__: Object
1:
categoryCode: null
categoryId: null
moduleId: 10
score: null
strCategory: 1002
strCategoryDescription: null
strSubCategory: 10002
strSubCategory1: 0
strSubCategory2: 0
strSubCategory3: "ADDRESS DETAILS"
strSubCategory4: "line2"
strSubCategory5: "line2"
subModuleId: 101
usedFlag: null

2:
categoryCode: null
categoryId: null
moduleId: 10
score: null
strCategory: 1002
strCategoryDescription: null
strSubCategory: 10002
strSubCategory1: 0
strSubCategory2: 0
strSubCategory3: "ADDRESS DETAILS"
strSubCategory4: "line1"
strSubCategory5: "line1"
subModuleId: 101
usedFlag: null
__proto__: Object
length: 3
__proto__: Array(0)




 this.personalInfoForm.controls['income'].clearValidators();
//this.personalInfoForm.controls['income'].setValidators(null);
this.personalInfoForm.controls['income'].updateValueAndValidity();                	

this.hidedenInMovement
this.expandAddressFlag

this.agentMaintenanceService.historyEmitter.subscribe(
          screenId => {
           if(screenId && screenId == "2"){
               
           }
        }) 




centerName: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
examSeq: FormControl {validator: null, asyncValidator: null, pristine: true, touched: false, _onCollectionChange: ƒ, …}
paymentLink: FormControl {validator: null, asyncValidator: null, pristine: true, touched: false, _onCollectionChange: ƒ, …}
prefExamdt1: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
prefExamdt2: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
prefLang: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
trainingLang: FormControl {asyncValidator: null, pristine: false, touched: true, validator: ƒ, _onCollectionChange: ƒ, …}



EndoDocumentModal


if((controls[i].docName == "Vehicle Proof") && ((this.incomeValue == "2 – 5 LPA or has 2 Wheeler") || (this.incomeValue == "5 LPA or has 4 Wheeler") || (this.incomeValue == "Has 4 Wheeler") || (this.incomeValue == "Has 2 Wheeler")) && controls[i].fileName == ''){
          if(controls[i].fileName == ''){
            
          }
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          (<HTMLInputElement>document.getElementById('txtFile_' + controls[i].docIndex)).className ="mandatoryField";
          if (controls[i].docTypeCd == '') {
            (<HTMLInputElement>document.getElementById('errorquesDocType' + controls[i].docIndex)).style.display = 'block';
            (<HTMLInputElement>document.getElementById('ddlDocType_' + controls[i].docIndex)).className ="mandatoryField";
          } else {
            (<HTMLInputElement>document.getElementById('errorquesDocType' + controls[i].docIndex)).style.display = 'none';
          }
          flag = false;
        } 
        if((controls[i].docName == "Occupation Proof") && ((this.occupationValue == "Business/Self Employed") || (this.occupationValue == "Employed")) && controls[i].fileName == ''){
          if(controls[i].fileName == ''){
            
          }
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          (<HTMLInputElement>document.getElementById('txtFile_' + controls[i].docIndex)).className ="mandatoryField";
          if (controls[i].docTypeCd == '') {
            (<HTMLInputElement>document.getElementById('errorquesDocType' + controls[i].docIndex)).style.display = 'block';
            (<HTMLInputElement>document.getElementById('ddlDocType_' + controls[i].docIndex)).className ="mandatoryField";
          } else {
            (<HTMLInputElement>document.getElementById('errorquesDocType' + controls[i].docIndex)).style.display = 'none';
          }
          flag = false;
        }
        if((controls[i].docName == "Income Proof") && ((this.occupationValue == "Business/Self Employed") || (this.occupationValue == "Employed")) && controls[i].fileName == ''){
          if(controls[i].fileName == ''){
            
          }
          (<HTMLInputElement>document.getElementById('errorquesFile' + controls[i].docIndex)).style.display = 'block';
          (<HTMLInputElement>document.getElementById('txtFile_' + controls[i].docIndex)).className ="mandatoryField";
          if (controls[i].docTypeCd == '') {
            (<HTMLInputElement>document.getElementById('errorquesDocType' + controls[i].docIndex)).style.display = 'block';
            (<HTMLInputElement>document.getElementById('ddlDocType_' + controls[i].docIndex)).className ="mandatoryField";
          } else {
            (<HTMLInputElement>document.getElementById('errorquesDocType' + controls[i].docIndex)).style.display = 'none';
          }
          flag = false;
        }
      }



               <!-- Contact Details -->
  <mz-collapsible [mode]="'expandable'" [popout]="false">
    <mz-collapsible-item [active]="false">
      <mz-collapsible-item-header>
        Contact Details
      </mz-collapsible-item-header>
      <mz-collapsible-item-body>

       
      </mz-collapsible-item-body>
    </mz-collapsible-item>
 this.storageService.storeObject('agentAccessMode', configuration.accessMode.edit);

  </mz-collapsible>



agentPersonalDetailsJson
endorsementCommon
wfCommonJson

agentEducationDetailsJsonList
0
endorsementCommon
wfCommonJson

categoryDocJson

saveJson.jsonStringOld = this.endorsementDtls.oldValue;
saveJson.jsonStringNew = this.endorsementDtls.newValue;
this.jsonArray[0].endorsementCommon.newValue


app-educationaldetails


[{"groupquestid":22,"eventVal":"null","optionScore":1,"questionId":194},{"groupquestid":22,"eventVal":"null","optionScore":2,"questionId":195},{"groupquestid":22,"eventVal":"null","optionScore":1,"questionId":196},{"groupquestid":22,"eventVal":"null","optionScore":1,"questionId":197},{"groupquestid":22,"eventVal":"null","optionScore":1,"questionId":198},{"groupquestid":22,"eventVal":"null","optionScore":2,"questionId":199}]
groupDesc: "Initiator Score Question Group"
igroupquestid: 18


groupDesc: "BM Score Question Group"
igroupquestid: 19

groupDesc: "BM Declaration"
igroupquestid: 21




[{"groupquestid":18,"eventVal":"null","optionScore":2,"questionId":173},
{"groupquestid":18,"eventVal":"null","optionScore":2,"questionId":174},
{"groupquestid":18,"eventVal":"null","optionScore":1,"questionId":175},
{"groupquestid":18,"eventVal":"null","optionScore":2,"questionId":176},
{"groupquestid":18,"eventVal":"null","optionScore":3,"questionId":177},
{"groupquestid":19,"eventVal":"null","optionScore":2,"questionId":178},
{"groupquestid":19,"eventVal":"null","optionScore":2,"questionId":179},
{"groupquestid":19,"eventVal":"null","optionScore":3,"questionId":180},
{"groupquestid":19,"eventVal":"null","optionScore":2,"questionId":181},
{"groupquestid":19,"eventVal":"null","optionScore":2,"questionId":182},
{"groupquestid":19,"eventVal":"null","optionScore":1,"questionId":183},
{"groupquestid":19,"eventVal":"null","optionScore":1,"questionId":184},
{"groupquestid":19,"eventVal":"null","optionScore":1,"questionId":185},
{"groupquestid":19,"eventVal":"null","optionScore":1,"questionId":186},
{"groupquestid":19,"eventVal":"null","optionScore":1,"questionId":187},
{"groupquestid":21,"eventVal":"null","optionScore":1,"questionId":188},
{"groupquestid":21,"eventVal":"null","optionScore":1,"questionId":189},
{"groupquestid":21,"eventVal":"null","optionScore":1,"questionId":190},
{"groupquestid":21,"eventVal":"null","optionScore":1,"questionId":191},
{"groupquestid":21,"eventVal":"null","optionScore":1,"questionId":192},
{"groupquestid":21,"eventVal":"null","optionScore":1,"questionId":193}]




new EndorsementDetails

C:\workspace\angular5\src\app\product\modules\onboarding\modules\agentOnboarding\bankdetails\bank-details.component.html
113 *ngIf="bankDetailsForm.controls['accNumber'].hasError('accountNoError')"



igroupquestid : qnOptObj.igroupquestid,
            eventVal: "null",
            optionScore: qnOptObj.qscore,
            questionId:  question.questId


groupquestid : qnOptObj.igroupquestid,




 if(eventVal == ''){
      eventVal = "select";
    }
    this.controlData.questionDetails.qnOptions.forEach(
      qnOptObj => {
        if (qnOptObj.optionDesc == eventVal || eventVal == "select") {
          this.questionLoaderService.questionOptionScoreEmitter.emit({
            eventVal:eventVal,
            optionScore: qnOptObj.optionScore,
            questionId: this.controlData.questionDetails.questionId
          });
        }
      });



transData.kyc2.officeUse.isPos


"YES"
isCabrBanca: "NO"

 <div *ngIf="!hideExamAndFee">


aadharNo: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
dtMarriageAnv: FormControl {validator: null, asyncValidator: null, pristine: true, touched: false, _onCollectionChange: ƒ, …}
dtOfBirth: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
fatherName: FormControl {asyncValidator: null, pristine: false, touched: true, validator: ƒ, _onCollectionChange: ƒ, …}
firstName: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
gender: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
gstinNumber: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
hasPassport: FormControl {validator: null, asyncValidator: null, pristine: true, touched: false, _onCollectionChange: ƒ, …}
income: FormControl {validator: null, asyncValidator: null, pristine: true, touched: false, _onCollectionChange: ƒ, …}
lastName: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
maritalStatus: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
middleName: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
otherEmploymentType: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
otp: FormControl {validator: null, asyncValidator: null, pristine: true, touched: false, _onCollectionChange: ƒ, …}
panNo: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
passExpDt: FormControl {validator: null, asyncValidator: null, pristine: true, touched: false, _onCollectionChange: ƒ, …}
passportNumber: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
salutation: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}
spouseDob: FormControl {validator: null, asyncValidator: null, pristine: true, touched: false, _onCollectionChange: ƒ, …}
spouseName: FormControl {asyncValidator: null, pristine: true, touched: false, validator: ƒ, _onCollectionChange: ƒ, …}




 //if updating values from movement
                
                // this.personalInfoForm.controls['salutation'].clearValidators();
                // this.personalInfoForm.controls['firstName'].clearValidators();
                // this.personalInfoForm.controls['middleName'].clearValidators();
                // this.personalInfoForm.controls['lastName'].clearValidators();
                // this.personalInfoForm.controls['gender'].clearValidators();
                // this.personalInfoForm.controls['dtOfBirth'].clearValidators();
                // this.personalInfoForm.controls['panNo'].clearValidators();
                // this.personalInfoForm.controls['aadharNo'].clearValidators();
                // this.personalInfoForm.controls['otp'].clearValidators();
                // this.personalInfoForm.controls['income'].setValue(1000);
                // this.personalInfoForm.controls['income'].clearValidators();
                // this.personalInfoForm.controls['gstinNumber'].clearValidators();
                // this.personalInfoForm.controls['hasPassport'].clearValidators();
                // this.personalInfoForm.controls['passExpDt'].clearValidators();
                // this.personalInfoForm.controls['passportNumber'].clearValidators();



http://10.28.18.24:8680/ExideLife/exidelifeInterface/updateEdorsementClientDetails/


this.draftSaveJSON

this.hideAllFields = true;
allFields
getEndorsementlist

MOV9497
						maritalStatus: [''],
						fatherName: [''],
						dtMarriageAnv: [''],
						spouseName: [''],
						spouseDob: [''],
						
						otherEmploymentType: [''],
						

 income

jaisey- Bm- am(see data & approve) -amc-ho
jaisey-am-
vivek- 

this.personalInfoForm.controls['dtMarriageAnv'].setValidators(null);
editFlow() {
    this.viewEditModal.close();
    this.storageService.storeObject('agentAccessMode', configuration.accessMode.edit);
    //this.storageService.storeObject('AMActionScreenId', '1');
    this.router.navigate(['agentMaintenance']);
  }

AgentMaintenanceHeaderModule
C:\workspace\angular5\src\app\product\modules\hierarchy\modules\agentMaintenance\agentMaintenanceHeader\agent-maintenance-header.module.ts


this.messageService.displayErrorAlert
storageService.storeObject('agentMaintenanceHeader'

  viewFlow() {
    //console.log("agent id is:"+ this.agentList.agentId);
    //this.storageService.storeObject('agentId', this.agentList.agentId);
    //console.log("agent id in view is:"+ this.storageService.storeObject('agentId', this.agentList.agentId));
    this.viewEditModal.close();
    this.storageService.storeObject('agentAccessMode', configuration.accessMode.view);
    this.router.navigate(['agentMaintenance']);
  }
 


fetchDataManipulationMode() {
    let currentMode = this.storageService.getObject('agentAccessMode');
debugger;
    return currentMode != null && currentMode != undefined && currentMode != '' ? currentMode : configuration.accessMode.view;
  }

  isViewMode() {
    debugger;
    return this.fetchDataManipulationMode() == configuration.accessMode.view;
  }


 this.storageService.storeObject('agentId', null);
 let agentId = this.storageService.getObject('agentId');

IndividualMovementListingComponent - storing agent id
C:\workspace\angular5\src\app\product\modules\questionnaire\questionnaireControls\dropdownControl\dropdown-control.component.html

 [hidden]="hidedenInMovement"
fetchDefaultDetails() {
    //this.agentId = "AGENT-8017580";
    //console.log("agent code in individual is:"+ this.agentId);
    this.agentId = this.agentMaintenanceService.fetchSelectedAgentId();
    this.agentMaintenanceService.fetchIndividualPersonalDetails(this.agentId).subscribe(data => {
      this.showIndividualDetails = true;
			var result = this.utilityService.convertObjectToJSON(data.body);
			this.storageService.storeObject('personalInfo', result.personalInfo);
      this.storageService.storeObject('agentSequence', result.personalInfo.clientSeq);
      this.storageService.storeObject('addressInfo', result.addressInfo);
      this.storageService.storeObject('contactInfo', result.contactInfo);
      this.storageService.storeObject('mobileInfo', result.phoneInfo);
      this.storageService.storeObject('emailInfo', result.emailInfo);
      this.storageService.storeObject('educationalInfo', result.educationalInfo);
      this.storageService.storeObject('agencyInfo', result.agencyInfoList);
      this.storageService.storeObject('bankInfo', result.bankInfo);
      this.storageService.storeObject('agentEmergencyContactDetails', result.agentEmergencyContactDetails);
    });
  }

this.tempEntity = this.storageService.getObject('saveData');

questionId

IndividualDetailsModule ngx-individualPersonalDetails <Pesonal Information, Educational 
AgentMaintenanceModule AgentMaintenanceService
AgentMovementModule   - curreent -AgentMovementComponent
http://localhost:4200/#/movementSetup/agentMovement
http://localhost:4200/#/agentMaintenance/individualDetails
http://localhost:4200/#/movementSetup/agentMovement/individualDetails

AgentMaintenanceHeaderModule

AgentMaintenanceModule

getAgentHeaderDetails

IndividualPersonalDetailsModule IndividualDetailsModule

providers: [
    AgentMaintenanceService
  ]
import { AgentMaintenanceService } from './../../modules/agentMaintenance/services/agent-maintenance.service';

AP005587

















id="btnQuestionNext" 
 [disableMode]="isEditFlow || isWithdrawal"
"(readOnlyMode || (disabledfield && !applicantView)) || saveButtonReq"
***********************************
selector: 'app-agent-movement',
<ngx-individualPersonalDetails></ngx-individualPersonalDetails>
agent-movement.component.ts

individual-details.component.ts

app-individual-details
C:\workspace\angular5\src\app\product\modules\hierarchy\modules\agentMaintenance\individualDetails\individual-details.component.html

import { IndividualPersonalDetailsComponent } from './childModules/individualPersonalDetails/individual-personal-details.component';

C:\workspace\angular5\src\app\product\modules\hierarchy\modules\agentMaintenance\individualDetails\childModules\individualPersonalDetails\individual-personal-details.component.ts

import { IndividualPersonalDetailsComponent } from '../../../../../../modules/hierarchy/modules/agentMaintenance/individualDetails/childModules/individualPersonalDetails/individual-personal-details.component';

jaiseey

this.saveButtonReq_bm =false;
        this.disableModeQuest_bm  = true;
9484

applicantId: "AP005945"

Hi sir,

Kindly deploy this build in DT for the following fixes.


https://spinapp00065.in.intranet/!/#Release_2021/view/head/CMS/DT-23-04-2021/UI


60007093
60264974
60373172
60277883
60240300
60250557
60012508
60296273
60307837
60308127
60439440

this.personalInfoForm.controls['dtMarriageAnv'].setValue(dateconvert);

<div class="col-md-4 col-sm-6 col-xs-12" [ngClass]="{ 'PB-20': otherEmpTypeOption}">
        <md-select id="ddlOtherEmployment" class="mdSelectFix" 
[ngClass]="{ 'mandatoryField': otherEmpTypeOption}" 
placeholder="{{otherEmpTypeOption? labelNames.employmentType: 'Other Employment Type'}}" formControlName="otherEmploymentType"
          name="otherEmploymentType" 
(change)="dropdownValueChange(this.personalInformation.otherEmploymentType,otherEmploymentTypes,'that.personalInformation.otherEmploymentType')"
 [(ngModel)]="personalInformation.otherEmploymentType">
          <md-option [ngClass]="{ 'color-red': otherEmpType.Status == 'D'}" 
*ngFor="let otherEmpType of otherEmploymentTypes" [value]="otherEmpType.val">{{otherEmpType.val}} - {{otherEmpType.label}}</md-option>
        </md-select>
        <div *ngIf="!isOnboardingEdit">
        <div class="errorMessageSelect" *ngIf="!personalInfoForm.controls['otherEmploymentType'].valid && personalInfoForm.controls['otherEmploymentType'].touched">
            {{screenMessages.occupationCategory.required}}
        </div>
      </div>
      </div>


filled
isEditFlow-true isWithdrawal- false

not filled
isEditFlow-false isWithdrawal- false

*ngFor="let item of menu;let i = index"
 
[class.active]="!item.stageTab"

[class.disabledCtrl]="item.stageTab ||(isRevpStage && isPendingRequirementStatus && item.path !== 'applicantInformation')
 || isPendingRequirementStatus || isPendingReExamStatus || isAbsent || isPendingReceiptRealization || isPendingExam"

[ngStyle]="{'background': ' url(assets/images/pin-note.png) no-repeat 21em 0'}"
[disabled]="document.controls.status.value == 1 || document.controls.status.value == 2"
(change)="docTypeChange($event.value,i)"
(click)="resetInput($event)" (change)="fileChange($event,i)"

*ngIf="document.controls.docName.value != 'Others'; else otherDocName"
<ng-template #otherDocName></ng-template>

<input id="txtOthers_{{i}}" attr.id="txtOthers_{{i}}" type="text" formControlName="otherDocName" [value]="document.controls.otherDocName.value">
<input id="txtRemarks_{{i}}" attr.id="txtRemarks_{{i}}" type="text" (blur)='changeRemarks($event.target.value,i)' [disabled]="document.controls.status.value == 1"
                                class="validate" formControlName="remarks" [value]="document.controls.remarks.value">

<img [src]="signatureResultImg" style="width: 300px;"/>
<img #CropedImageSignature (load)="doSomething()" id="CropedImageSignature" [src]="imageData" style="width: 827px;">

 <i mz-icon [icon]="'add'" [align]="'left'"></i>
 <i class="fa" [ngClass]="{
                            'fa-angle-double-down': this.currentSortOrder != '' && this.currentSortOrder == '1',
                            'fa-angle-double-up': this.currentSortOrder != '' && this.currentSortOrder == '0'
                          }"></i>
 initializePANForm() {
    var regEx = /^[A-Za-z]{3}[p|P|c|C|h|H|f|F|a|A|t|T|b|B|l|L|j|J|g|G]{1}[A-Za-z]{1}\d{4}[A-Za-z]{1}$/;
    if (configuration.personPanValidation) // validation to allow only person pan numbers
    {
      regEx = /^[A-Za-z]{3}[p|P]{1}[A-Za-z]{1}\d{4}[A-Za-z]{1}$/;
    }
    this.panForm = this.fb.group({
      applicantType: ['1', Validators.compose([Validators.required])],
      panNo: ['', Validators.compose([Validators.required,
        Validators.pattern(regEx)
      ])],
      panDeclaration: [''],
      aadharGroup: [''],
      dateOfBirth: ['', Validators.compose([this.ekycDOBRequired ? Validators.required : null, this.minimumDtOfBirth.bind(this)])],
      aadhaarNo: ['', Validators.compose([Validators.required, Validators.minLength(12), !this.aadhaarOrVIDRequired ? Validators.pattern(/^\d{12}$/) : null])],
      otp: ['', Validators.compose([!this.ekycDOBRequired ? Validators.required : null, Validators.minLength(6), Validators.pattern(/^(|[0-9][0-9]*)$/)])],
      gender: ['', this.ekycGenderRequired ? Validators.required : null],
      entity: [''],
      entityType: [''],
      corporateName:['']
    });
  }

this.personalForm = this.fb.group({
      salutation: ['', Validators.required],
      firstName: ['', Validators.compose([Validators.required, Validators.pattern(/^(?=.{2,30}$)[a-zA-Z]+(?:\s?[a-zA-Z])*$/)])],
      middleName: ['', Validators.compose([Validators.pattern(/^(?=.{0,30}$)[a-zA-Z]+(?:\s?[a-zA-Z])*$/)])],
      lastName: ['', Validators.compose([Validators.required, Validators.pattern(this.regEx.lastName)])],
      gender: ['', Validators.required],
      dateOfBirth: ['', [Validators.required, this.minimumDtOfBirth.bind(this)]],
      addressType: ['', this.ekycDOBRequired ? Validators.required : null],
      line1: ['', Validators.compose([Validators.required, this.addressLineValidation.bind(this)])],
      line2: ['',  this.addressLineValidation.bind(this)],
      line3: ['',  this.addressLineValidation.bind(this)],
      locality: ['', this.addressLineValidation.bind(this)],
      country: ['', Validators.required],
      pinCode: ['', Validators.compose([Validators.required, Validators.pattern(/^\d{6}$/)])],
      mobileNo: new FormControl('', {
        validators: Validators.compose([Validators.required, Validators.maxLength(10), Validators.pattern(this.regEx.mobileNo)]),
        updateOn: 'blur'
      }),
      emailId: new FormControl('', {
        validators: Validators.compose([Validators.required, Validators.pattern(emailRegex)])
      }),
      corporateLandline:['']
    });

 if (this.configSettings.addressDetailsNonMandatory) {
      this.personalForm.controls['line1'].setValidators(Validators.pattern(/^[\w',-\\\/.\s\(\)]{5,200}$/));
      this.personalForm.controls['line1'].updateValueAndValidity();

      this.personalForm.controls['country'].setValidators(null);
      this.personalForm.controls['country'].updateValueAndValidity();

      this.personalForm.controls['pinCode'].setValidators(Validators.pattern(/^\d{6}$/));
      this.personalForm.controls['pinCode'].updateValueAndValidity();
    }



  this.router.navigate(['workbench']);
this.panForm.get('aadhaarNo').reset();
this.form.controls['applicantInfoLink'].setValue(draftSave.transData.arfInfo.arfLink);
this.panForm.controls['aadhaarNo'].setValidators(Validators.compose([Validators.required, Validators.minLength(12)]));
this.panForm.controls['aadhaarNo'].setValidators(null);
this.panForm.controls['entity'].setValidators(Validators.required);
let emailRegex = /^(([^<>()\[\]\\.,;:?!^#&*\s@"]+(\.[^<>()\[\]\\.,;:?!^#&*\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.){1,2}[a-zA-Z]{2,}))$/     
emailId: new FormControl('', {
        validators: Validators.compose([Validators.required, Validators.pattern(emailRegex)])
      })



if (!this.panForm.valid && (this.panForm.controls.dateOfBirth.status == "INVALID")) {

}

image uploading
C:\workspace\angular5\src\app\product\modules\contentManagement\modules\templateCreation\template-creation.component.ts


<div *ngIf='declarationArray.length > 1; else singleDecLine'>
                            <ol type="i">
                              <li *ngFor='let dec of declarationArray'>
                                {{dec}}
                              </li>
                            </ol>
                          </div>
                          <ng-template #singleDecLine>
                            {{declarationArray[0]}}
                          </ng-template>

 <div *ngIf="otpForm.controls['otp'].invalid && (otpForm.controls['otp'].dirty || otpForm.controls['otp'].touched)">

                        <div class="errorMessage" *ngIf="otpForm.controls['otp'].errors.required; else NoMax">
                          {{ screenMessages.otp.required }}
                        </div>

                        <ng-template #NoMax>
                          <div class="errorMessage" *ngIf="otpForm.controls['otp'].errors.minlength; else NoPattern">
                            {{ screenMessages.otp.minlength }}
                          </div>
                        </ng-template>

                        <ng-template #NoPattern>
                          <div class="errorMessage" *ngIf="otpForm.controls['otp'].errors.pattern">
                            {{ screenMessages.otp.pattern }}
                          </div>
                        </ng-template>
                      </div>


*ngIf="applicantDisplay.length == 0"
*ngIf="!(isProdUser||isHOUSERMAKERTA||isHOUSERMAKERDM||isHOVIEW
                          ||(isHOUser && applicant.applicationStatus != 'Pending Requirement') || (isCheckUser && applicant.applicationStatus != 'Pending Requirement') || (isMakerUser && applicant.applicationStatus != 'Pending Requirement') );
                           else displayLink"


<input id="cbTest0101_{{applicant.applicantId}}" type="checkbox" [value]=true [(ngModel)]="applicant.applicantChecked" />



tab1-quationare
tab2-document 
uat-scrutiny/AP005253/(profile score)
uat-listing/AP005261/(Tab Application) = Tab Design


accordion: know-your-candidate.component.html
C:\workspace\angular5\src\app\product\modules\onboarding\modules\agentOnboarding\applicantinformation\applicant-information.component.html
C:\workspace\angular5\src\app\product\modules\onboarding\modules\agentOnboarding\personalinformation\personal-information.component.html

questionarie http://localhost:4200/#/agentOnboarding/applicantInformation 
applicant-information.component.html
applicant-view.component.html




BM-(Branch Manager)
http://10.28.18.24/#/agentOnboarding/applicantInformation

http://localhost:4200/#/scrutiny
workbench.component.html - scrutiny

http://localhost:4200/#/agentOnboarding/assessment - quotanire

tabs -http://localhost:4200/#/agentMaintenance/nomineeDetails


DT 
http://10.28.18.24/#/prelogin
          username – Jaisey
          Password – pass@123
UAT – 
https://gateway2.exidelife.in/cms/#/prelogin
          username – uatabhijeetp3
          Password – system@1234   

getReOnboardingDetails